{
    "pipes": [],
    "interfaces": [
        {
            "name": "iCompositeKanaCardCard",
            "id": "interface-iCompositeKanaCardCard-3fbdd1ceff476c2f422df2ac93ff0360feb58192bc1d0857a7cafb06f50e79771dd09ccfd53fca7950f30cd9e8618f3b46a8b6fbfebddf82801179fbfbb7790a",
            "file": "src/app/writing/composite-kana-card/composite-kana-card.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { iKana } from '../kana/kana.model';\r\n\r\nexport interface iCompositeKanaCardCard {\r\n  isHiragana: boolean;\r\n  rowOfKana: Array<iKana>;\r\n  solution: iKana;\r\n}\r\n",
            "properties": [
                {
                    "name": "isHiragana",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "rowOfKana",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "solution",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iKana",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iCompositeKanaWithDerivativeCard",
            "id": "interface-iCompositeKanaWithDerivativeCard-8fbae5274d93543592f10a3b5b4be50a13b9baed305c23cf82792685894c7bc02adf8a38b90f02ef0cd03e70d83ad8f0bfa09e764dc78c7bf1e9379980841875",
            "file": "src/app/writing/composite-kana-with-derivative-card/composite-kana-with-derivative-card.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { iKana } from '../kana/kana.model';\r\n\r\nexport interface iCompositeKanaWithDerivativeCard {\r\n  isHiragana: boolean;\r\n  rowOfKana: Array<iKana>;\r\n  solution: iKana;\r\n}\r\n",
            "properties": [
                {
                    "name": "isHiragana",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "rowOfKana",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "solution",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iKana",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iDerivativeKanaCard",
            "id": "interface-iDerivativeKanaCard-8774c02c0b3d7a5482684991de389aad1a418a2184d40b2a2a3dfecba1f2f3d51610860812d6f7f78b40c8a47405d6c79d5fa8c508c53e7ccef879aa0ddd4325",
            "file": "src/app/writing/derivative-kana-card/derivative-kana-card.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { iKana } from '../kana/kana.model';\r\n\r\nexport interface iDerivativeKanaCard {\r\n  rowOfKana: Array<iKana>;\r\n  solution: iKana;\r\n}\r\n",
            "properties": [
                {
                    "name": "rowOfKana",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "solution",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iKana",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iDictionaryTableRow",
            "id": "interface-iDictionaryTableRow-619aadd73f3143e6792939d8b9017b7bb69cbcbae713ad677d6b7d473c005d2b38bffe5ef9f932b28089f672b698f25dcf5bbbec637d1691b8559d9001473498",
            "file": "src/app/dictionary/dictionary-table/dictionary-table-row.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { iVocabularyCard } from \"src/app/vocabulary/vocabulary-card/vocabulary-card.model\";\r\n\r\nexport interface iDictionaryTableRow {\r\n    word: iVocabularyCard,\r\n    description: Array<string>;\r\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<string>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "word",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iVocabularyCard",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iFormsOfAdjectivesCard",
            "id": "interface-iFormsOfAdjectivesCard-f60d280563e80c24399e3510114390406c4d42f3707afa5420ed60d66164b65bd4688cb10e02f3f49f2cff2d9ca585ac5c8dbfb8e6798a674bd5f6f182d6c5c0",
            "file": "src/app/adjectives/forms-of-adjectives-card/forms-of-adjectives-card.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface iFormsOfAdjectivesCard {\r\n    typeOfAdjective: string;\r\n    adjective: {\r\n        kana: string;\r\n        pronunciation: string;\r\n        translation: string;\r\n    };\r\n    negativePresent: {\r\n        kana: string;\r\n        pronunciation: string;\r\n        translation: string;\r\n    };\r\n    positivePast: {\r\n        kana: string;\r\n        pronunciation: string;\r\n        translation: string;\r\n    };\r\n    negativePast: {\r\n        kana: string;\r\n        pronunciation: string;\r\n        translation: string;\r\n    };\r\n}",
            "properties": [
                {
                    "name": "adjective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "negativePast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "negativePresent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "positivePast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "typeOfAdjective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iKana",
            "id": "interface-iKana-3dc7dc68c93ce9973939aaeb14ec8158e9fb7a3f3250ef4ecd0f6575bd37e04ba35d8a6c1ec3276bc148828bacd09404ae04a56b5c67bc4c37713aa1717a556d",
            "file": "src/app/writing/kana/kana.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface iKana {\r\n  kana: string;\r\n  pronunciation: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "kana",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "pronunciation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iKanjiWithHiragana",
            "id": "interface-iKanjiWithHiragana-0ae49b61de46e04aa82f391ce61e6ecdacf83df85d7be5a60096d8f2222d6f4b7a1e8e7d7f6ac810019114598c4ff04e4541ccbc6809c2a5068dc2647dc19838",
            "file": "src/app/shared-components/kanji-with-hiragana/kanji-with-hiragana.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface iKanjiWithHiragana {\r\n    kanji: string;\r\n    hiragana: string;\r\n    pronunciation: string; // ?? this property needs to spell out the pronunciation in the latin alphabet\r\n}",
            "properties": [
                {
                    "name": "hiragana",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "kanji",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "pronunciation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iVocabularyCard",
            "id": "interface-iVocabularyCard-f1854890471b53d8bbd70a95a087f35c513f65073f3cff187ab14ce719ae43717ba1c3b733d0007c8f5c7e0b93e08c968a1782edb9e519bcc07e7d05aab7b983",
            "file": "src/app/vocabulary/vocabulary-card/vocabulary-card.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface iVocabularyCard {\r\n    translation: string;\r\n    japanese: {\r\n        isComposite?: boolean; // ?? if the japanese word consists of kanji and kana this porperty must be set\r\n        kanjiIsFirst?: boolean; // ?? if it is a composite this property must be set to determine the proper order\r\n        kanji?: string;\r\n        kana?: string;\r\n    };\r\n    pronunciation: {\r\n        hiraganaOnly: string;\r\n        latin: string;\r\n    };\r\n}\r\n\r\n// todo: 'iVocabularyCard' should allow for the following combinations: 'hirgana + kanji', 'kanji + hiragana', 'katana + kanji' and 'kanji + hiragana'. for 'kanji' the 'kanji-with-hiragana'-component sould be used",
            "properties": [
                {
                    "name": "japanese",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "pronunciation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "translation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-446fe4a619c5ebf436c3283907fbd622dfe38b371a563d3f6a09f8f2695f7a19cb51086cbf316f339e1d3da1d45301e8acb27be37e913cf34bf132c38f55cfbe",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adjectives",
                    "defaultValue": "NA_ADJECTIVES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iFormsOfAdjectivesCard>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "dictionary",
                    "defaultValue": "[\n    {\n      word: {\n        translation: 'Samurai',\n        japanese: {\n          isComposite: true,\n          kanjiIsFirst: true,\n          kanji: '侍',\n        },\n        pronunciation: {\n          latin: 'sa-mu-ra-i',\n          hiraganaOnly: 'さむらい',\n        },\n      },\n      description: [\n        \"What, right here right now in the cafeteria? What if she said no? I don't know if I could take that kind of rejection. Besides, I think she'd rather go with somebody else. Did you hurt your head? I just wanna use the phone. I don't wanna see you in here again. Like I always told you, if you put your mind to it you could accomplish anything.\",\n      ],\n    },\n    {\n      word: {\n        translation: 'Straberry Cake',\n        japanese: {\n          kanjiIsFirst: false,\n          kana: 'ストロベリー ケーキ',\n        },\n        pronunciation: {\n          latin: 'su-to-ro-be-ri-i ke-ki',\n          hiraganaOnly: '',\n        },\n      },\n      description: [''],\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iDictionaryTableRow>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "katakanaK",
                    "defaultValue": "KATAKANA_K",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "title",
                    "defaultValue": "'learning-japanese'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "vocabulary",
                    "defaultValue": "VOCABULARY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iVocabularyCard>",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { iFormsOfAdjectivesCard } from './adjectives/forms-of-adjectives-card/forms-of-adjectives-card.model';\n\n// interfaces\nimport { iVocabularyCard } from './vocabulary/vocabulary-card/vocabulary-card.model';\nimport { iDictionaryTableRow } from './dictionary/dictionary-table/dictionary-table-row.model';\n\n// example data\nimport { VOCABULARY } from './data/data_vocabulary';\nimport { NA_ADJECTIVES } from './data/data_formsOfAdjectives';\nimport { iKana } from './writing/kana/kana.model';\nimport { KATAKANA_K } from './data/data_katakanaSyllables';\n\n@Component({\n  selector: 'root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'learning-japanese';\n  katakanaK: Array<iKana> = KATAKANA_K;\n  vocabulary: Array<iVocabularyCard> = VOCABULARY;\n  adjectives: Array<iFormsOfAdjectivesCard> = NA_ADJECTIVES;\n  dictionary: Array<iDictionaryTableRow> = [\n    {\n      word: {\n        translation: 'Samurai',\n        japanese: {\n          isComposite: true,\n          kanjiIsFirst: true,\n          kanji: '侍',\n        },\n        pronunciation: {\n          latin: 'sa-mu-ra-i',\n          hiraganaOnly: 'さむらい',\n        },\n      },\n      description: [\n        \"What, right here right now in the cafeteria? What if she said no? I don't know if I could take that kind of rejection. Besides, I think she'd rather go with somebody else. Did you hurt your head? I just wanna use the phone. I don't wanna see you in here again. Like I always told you, if you put your mind to it you could accomplish anything.\",\n      ],\n    },\n    {\n      word: {\n        translation: 'Straberry Cake',\n        japanese: {\n          kanjiIsFirst: false,\n          kana: 'ストロベリー ケーキ',\n        },\n        pronunciation: {\n          latin: 'su-to-ro-be-ri-i ke-ki',\n          hiraganaOnly: '',\n        },\n      },\n      description: [''],\n    },\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- content -->\n<!-- <router-outlet></router-outlet> -->\n\n<!-- footer -->\n<!-- <legal-notices-footer></legal-notices-footer> -->\n<composite-kana-card\n  [data]=\"{\n    isHiragana: false,\n    rowOfKana: katakanaK,\n    solution: {\n      kana: 'キャ',\n      pronunciation: 'kya'\n    }\n  }\"\n></composite-kana-card>\n\n<derivative-kana-card\n  [data]=\"{\n    rowOfKana: katakanaK,\n    solution: {\n      kana: 'ギ',\n      pronunciation: 'gi'\n    }\n  }\"\n></derivative-kana-card>\n\n<composite-kana-with-derivative-card\n  [data]=\"{\n    isHiragana: false,\n    rowOfKana: katakanaK,\n    solution: {\n      kana: 'ギャ',\n      pronunciation: 'gya'\n    }\n  }\"\n></composite-kana-with-derivative-card>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CompositeKanaCard",
            "id": "component-CompositeKanaCard-590ec079e6af76ea6bd441e1d6b2c42620d3b27d2d5927c2b0cd73b5175ffb2b3a418ac5f8d2aff78711741aa51aa51e9d6c547cf24a7870f2518b3ade04cba3",
            "file": "src/app/writing/composite-kana-card/composite-kana-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "composite-kana-card",
            "styleUrls": [
                "./composite-kana-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./composite-kana-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "iCompositeKanaCardCard",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "userStatus",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "answerGiven",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "hiraganaY",
                    "defaultValue": "HIRAGANA_Y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "kanaValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iKana",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "katakanaY",
                    "defaultValue": "KATAKANA_Y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "userSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "yValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iKana",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "onCheckUserAnswer",
                    "args": [
                        {
                            "name": "kanaValue",
                            "type": "iKana",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "yValue",
                            "type": "iKana",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "kanaValue",
                            "type": "iKana",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "yValue",
                            "type": "iKana",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setKanaValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "iKana",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "iKana",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setYValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "iKana",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "iKana",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n// interfaces\nimport { iCompositeKanaCardCard } from './composite-kana-card.model';\nimport { iKana } from '../kana/kana.model';\n\n// data\nimport { HIRAGANA_Y } from 'src/app/data/data_hiraganaSyllables';\nimport { KATAKANA_Y } from 'src/app/data/data_katakanaSyllables';\n\n@Component({\n  selector: 'composite-kana-card',\n  templateUrl: './composite-kana-card.component.html',\n  styleUrls: ['./composite-kana-card.component.scss'],\n})\nexport class CompositeKanaCard {\n  @Input() data: iCompositeKanaCardCard;\n  @Output() userStatus: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // local variables\n  hiraganaY: Array<iKana> = HIRAGANA_Y;\n  katakanaY: Array<iKana> = KATAKANA_Y;\n  answerGiven: boolean = false;\n  userSuccess: boolean;\n  kanaValue: iKana;\n  yValue: iKana;\n\n  setKanaValue(event: iKana): void {\n    this.kanaValue = event;\n\n    this.onCheckUserAnswer(this.kanaValue, this.yValue);\n  } // sets value of 'kana' (first dropdown) and triggers the checking of the users answer\n\n  setYValue(event: iKana): void {\n    this.yValue = event;\n\n    this.onCheckUserAnswer(this.kanaValue, this.yValue);\n  } // sets value of 'ya', 'yu' and 'yo' (first dropdown) and triggers the checking of the users answer\n\n  onCheckUserAnswer(kanaValue: iKana, yValue: iKana): void {\n    if (kanaValue && yValue) this.answerGiven = true;\n\n    if (\n      kanaValue.pronunciation === 'ka' ||\n      kanaValue.pronunciation === 'ku' ||\n      kanaValue.pronunciation === 'ke' ||\n      kanaValue.pronunciation === 'ko'\n    ) {\n      // ?? combinations with 'ya','yu' and 'yo' are only possible with '...i' syllables\n      this.userSuccess = false;\n      this.userStatus.emit(false);\n    } else {\n      let relevantPartOfSolution: string =\n        this.data.solution.pronunciation.substring(\n          this.data.solution.pronunciation.length - 1,\n          this.data.solution.pronunciation.length\n        );\n      if (\n        (relevantPartOfSolution === 'a' &&\n          this.yValue.pronunciation === 'ya') ||\n        (relevantPartOfSolution === 'u' &&\n          this.yValue.pronunciation === 'yu') ||\n        (relevantPartOfSolution === 'o' && this.yValue.pronunciation === 'yo')\n      ) {\n        this.userSuccess = true;\n        this.userStatus.emit(true);\n      } else {\n        this.userSuccess = false;\n        this.userStatus.emit(false);\n      }\n    }\n  } // checks the users answer and shows feedback accordingly\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"sizes\";\r\n@import \"mixins\";\r\n\r\n$kana-dropdown__size--width: calc(\r\n  #{$base__size--xxl} + #{$base__size--xs} + #{$base__size--l}\r\n);\r\n\r\n:host {\r\n  display: grid;\r\n  grid-template-columns: $kana-dropdown__size--width $base__size--xxl $kana-dropdown__size--width $base__size--xxl $base__size--xxl $base__size--xxl;\r\n  border: thin coral solid;\r\n\r\n  .operator__icon,\r\n  .feedback__user {\r\n    width: $base__size--xxl;\r\n    height: $base__size--xxl;\r\n    @include container__single-element--center-center;\r\n\r\n    & > p {\r\n      margin: 0;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./composite-kana-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<kana-dropdown\n  [data]=\"data.rowOfKana\"\n  (choice)=\"setKanaValue($event)\"\n></kana-dropdown>\n\n<section class=\"operator__icon\">\n  <p class=\"material-icons\">add</p>\n</section>\n\n<!-- ?? 'ya', 'yu' or 'yo'  in hiragana or katakana -->\n<kana-dropdown\n  *ngIf=\"data.isHiragana\"\n  [data]=\"hiraganaY\"\n  (choice)=\"setYValue($event)\"\n></kana-dropdown>\n<kana-dropdown\n  *ngIf=\"!data.isHiragana\"\n  [data]=\"katakanaY\"\n  (choice)=\"setYValue($event)\"\n></kana-dropdown>\n\n<section class=\"operator__icon\">\n  <p class=\"material-icons\">east</p>\n</section>\n\n<kana [data]=\"data.solution\"></kana>\n\n<section class=\"feedback__user\">\n  <p *ngIf=\"answerGiven && userSuccess\" class=\"material-icons\">check</p>\n  <p *ngIf=\"answerGiven && !userSuccess\" class=\"material-icons\">close</p>\n</section>\n"
        },
        {
            "name": "CompositeKanaWithDerivativeCard",
            "id": "component-CompositeKanaWithDerivativeCard-28691d742858efc63224fec8c27223440cb29ceabc092cc89c66cf24bd697e5ec8dc19b53ebaec7b83e8d38e3f271632f66d187c9a297c448d2208df0e0ca2ba",
            "file": "src/app/writing/composite-kana-with-derivative-card/composite-kana-with-derivative-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "composite-kana-with-derivative-card",
            "styleUrls": [
                "./composite-kana-with-derivative-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./composite-kana-with-derivative-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "iCompositeKanaWithDerivativeCard",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "userStatus",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "answerGiven",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "hiraganaY",
                    "defaultValue": "HIRAGANA_Y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "kanaDakuten",
                    "defaultValue": "KANA_DAKUTEN",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "katakanaY",
                    "defaultValue": "KATAKANA_Y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "userSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n// interfaces\nimport { iCompositeKanaWithDerivativeCard } from './composite-kana-with-derivative-card.model';\nimport { iKana } from '../kana/kana.model';\n\n// data\nimport { KANA_DAKUTEN } from 'src/app/data/data_kanaDakuten';\nimport { HIRAGANA_Y } from 'src/app/data/data_hiraganaSyllables';\nimport { KATAKANA_Y } from 'src/app/data/data_katakanaSyllables';\n\n@Component({\n  selector: 'composite-kana-with-derivative-card',\n  templateUrl: './composite-kana-with-derivative-card.component.html',\n  styleUrls: ['./composite-kana-with-derivative-card.component.scss'],\n})\nexport class CompositeKanaWithDerivativeCard {\n  @Input() data: iCompositeKanaWithDerivativeCard;\n  @Output() userStatus: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // local variables\n  kanaDakuten: Array<iKana> = KANA_DAKUTEN;\n  hiraganaY: Array<iKana> = HIRAGANA_Y;\n  katakanaY: Array<iKana> = KATAKANA_Y;\n\n  answerGiven: boolean = false;\n  userSuccess: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"sizes\";\r\n@import \"mixins\";\r\n\r\n$kana-dropdown__size--width: calc(\r\n  #{$base__size--xxl} + #{$base__size--xs} + #{$base__size--l}\r\n);\r\n\r\n:host {\r\n  display: grid;\r\n  grid-template-columns: $kana-dropdown__size--width $base__size--xxl $kana-dropdown__size--width $base__size--xxl $kana-dropdown__size--width $base__size--xxl $base__size--xxl $base__size--xxl;\r\n  border: thin coral solid;\r\n\r\n  .operator__icon,\r\n  .feedback__user {\r\n    width: $base__size--xxl;\r\n    height: $base__size--xxl;\r\n    @include container__single-element--center-center;\r\n\r\n    & > p {\r\n      margin: 0;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./composite-kana-with-derivative-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<kana-dropdown [data]=\"data.rowOfKana\"></kana-dropdown>\n\n<section class=\"operator__icon\">\n  <p class=\"material-icons\">add</p>\n</section>\n\n<kana-dropdown [data]=\"kanaDakuten\"></kana-dropdown>\n\n<section class=\"operator__icon\">\n  <p class=\"material-icons\">add</p>\n</section>\n\n<!-- ?? 'ya', 'yu' or 'yo'  in hiragana or katakana -->\n<kana-dropdown *ngIf=\"data.isHiragana\" [data]=\"hiraganaY\"></kana-dropdown>\n<kana-dropdown *ngIf=\"!data.isHiragana\" [data]=\"katakanaY\"></kana-dropdown>\n\n<section class=\"operator__icon\">\n  <p class=\"material-icons\">east</p>\n</section>\n\n<!-- ?? '゛', or '゜' -->\n<kana [data]=\"data.solution\"></kana>\n\n<section class=\"feedback__user\">\n  <p *ngIf=\"answerGiven && userSuccess\" class=\"material-icons\">check</p>\n  <p *ngIf=\"answerGiven && !userSuccess\" class=\"material-icons\">close</p>\n</section>\n"
        },
        {
            "name": "Contact",
            "id": "component-Contact-f906d3f815e28d94c5039cc6778b0662dfb6726a026d3d0c0ed01d203ffe73f60ff5116eb577b99177b77a25e9016749e58769ed5e3742ac53af39a96f194a6c",
            "file": "src/app/legal-notices/contact/contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "contact",
            "styleUrls": [
                "./contact.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contact.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss'],\n})\nexport class Contact {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./contact.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h4>Contact</h4>\n<p>Contact of the Owner&nbsp;&nbsp;|&nbsp;&nbsp;Service Provider</p>\n<p>\n  This website is my academic as well as business Portfolio. Therefore, neither\n  this website, nor its sub pages, have any kind of commercial character\n  whatsoever. Therefore, I subsequently state Name and Address of the\n  Owner&nbsp;<span class=\"comment\">[Service Provider]&nbsp;</span>— André-Pascal\n  Werthwein.<sup>[§1 Abs. 4 TMG, §55 Abs. 1 RstV]</sup>\n</p>\n\n<table class=\"table-contact\">\n  <thead></thead>\n  <tbody>\n    <tr>\n      <td><i class=\"material-icons\">fingerprint</i></td>\n      <td>André-Pascal Werthwein</td>\n    </tr>\n    <tr>\n      <td><i class=\"material-icons\">home</i></td>\n      <td>Friedrichstraße 72,<br />76646 Bruchsal<br />Germany</td>\n    </tr>\n    <tr>\n      <td><i class=\"material-icons\">mail_outline</i></td>\n      <td>\n        <address>\n          <a\n            class=\"text-anchor\"\n            href=\"&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#105;&amp;#110;&amp;#102;&amp;#111;&amp;#64;&amp;#97;&amp;#110;&amp;#100;&amp;#114;&amp;#101;&amp;#119;&amp;#101;&amp;#114;&amp;#116;&amp;#104;&amp;#119;&amp;#101;&amp;#105;&amp;#110;&amp;#46;&amp;#100;&amp;#101;\"\n            >info[at]<span style=\"display: none\">fuck-the-spam-bot</span\n            >andrewerthwein.de</a\n          >\n        </address>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
        },
        {
            "name": "DerivativeKanaCard",
            "id": "component-DerivativeKanaCard-f94e4ab598d271a4345ff3a960b4251f3b9dd83d6fb87b9133a71c7db7add04456715255bf466033b7e757d8520c8fcddd2ae673a4feaff568ff7cef144ec70f",
            "file": "src/app/writing/derivative-kana-card/derivative-kana-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "derivative-kana-card",
            "styleUrls": [
                "./derivative-kana-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./derivative-kana-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "iDerivativeKanaCard",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "userStatus",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "answerGiven",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "kanaDakuten",
                    "defaultValue": "KANA_DAKUTEN",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "userSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n// interfaces\nimport { iDerivativeKanaCard } from './derivative-kana-card.model';\nimport { iKana } from '../kana/kana.model';\n\n// data\nimport { KANA_DAKUTEN } from 'src/app/data/data_kanaDakuten';\n\n@Component({\n  selector: 'derivative-kana-card',\n  templateUrl: './derivative-kana-card.component.html',\n  styleUrls: ['./derivative-kana-card.component.scss'],\n})\nexport class DerivativeKanaCard {\n  @Input() data: iDerivativeKanaCard;\n  @Output() userStatus: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // local variables\n  kanaDakuten: Array<iKana> = KANA_DAKUTEN;\n  answerGiven: boolean = false;\n  userSuccess: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"sizes\";\r\n@import \"mixins\";\r\n\r\n$kana-dropdown__size--width: calc(\r\n  #{$base__size--xxl} + #{$base__size--xs} + #{$base__size--l}\r\n);\r\n\r\n:host {\r\n  display: grid;\r\n  grid-template-columns: $kana-dropdown__size--width $base__size--xxl $kana-dropdown__size--width $base__size--xxl $base__size--xxl $base__size--xxl;\r\n  border: thin coral solid;\r\n\r\n  .operator__icon,\r\n  .feedback__user {\r\n    width: $base__size--xxl;\r\n    height: $base__size--xxl;\r\n    @include container__single-element--center-center;\r\n\r\n    & > p {\r\n      margin: 0;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./derivative-kana-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<kana-dropdown [data]=\"data.rowOfKana\"></kana-dropdown>\n\n<section class=\"operator__icon\">\n  <p class=\"material-icons\">add</p>\n</section>\n\n<kana-dropdown [data]=\"kanaDakuten\"></kana-dropdown>\n\n<section class=\"operator__icon\">\n  <p class=\"material-icons\">east</p>\n</section>\n\n<!-- ?? '゛', or '゜' -->\n<kana [data]=\"data.solution\"></kana>\n\n<section class=\"feedback__user\">\n  <p *ngIf=\"answerGiven && userSuccess\" class=\"material-icons\">check</p>\n  <p *ngIf=\"answerGiven && !userSuccess\" class=\"material-icons\">close</p>\n</section>\n"
        },
        {
            "name": "DictionaryTable",
            "id": "component-DictionaryTable-072e4e16c6ecd44260cc623be84b85aba1d4b6bff989614d04c958bbbadf0f2856111c3684fb4c42a15242142fffded6145454b29fc8f3e128b8aec5227117a0",
            "file": "src/app/dictionary/dictionary-table/dictionary-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dictionary-table",
            "styleUrls": [
                "./dictionary-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dictionary-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Array<iDictionaryTableRow>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { iDictionaryTableRow } from './dictionary-table-row.model';\n\n@Component({\n  selector: 'dictionary-table',\n  templateUrl: './dictionary-table.component.html',\n  styleUrls: ['./dictionary-table.component.scss']\n})\nexport class DictionaryTable {\n  @Input() data: Array<iDictionaryTableRow>;\n   // todo: automaticcally compile data for dictionary from vocabulary and descriptions; see sql-strategy\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dictionary-table.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<table>\n    <thead>\n        <tr>\n            <th>Translation</th>\n            <th colspan=\"2\">Traditional Japanese</th>\n            <th>Additional Information</th>\n        </tr>\n        <tr>\n            <th>English</th>\n            <th>Japanese</th> \n            <th>in Hiragana</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let tableRow of data\">\n            <td>{{ tableRow.word.translation}}</td>\n\n            <!-- ?? combination: kanji + kana -->\n            <td *ngIf=\"tableRow.word.japanese.isComposite && tableRow.word.japanese.kanjiIsFirst && tableRow.word.japanese.kanji && tableRow.word.japanese.kana\">{{ tableRow.word.japanese.kanji + tableRow.word.japanese.kana}}</td>\n            \n            <!-- ?? combination: kana + kanji -->\n            <td *ngIf=\"tableRow.word.japanese.isComposite && !tableRow.word.japanese.kanjiIsFirst && tableRow.word.japanese.kanji && tableRow.word.japanese.kana\">{{ tableRow.word.japanese.kana + tableRow.word.japanese.kanji}}</td>\n            \n            <!-- ?? kana only -->\n            <td *ngIf=\"!tableRow.word.japanese.isComposite && tableRow.word.japanese.kana\">{{ tableRow.word.japanese.kana }}</td>\n            \n            <!-- ?? pronunciation: hiragana -->\n            <td [title]=\"tableRow.word.pronunciation.latin\">\n                <span *ngIf=\"tableRow.word.pronunciation.hiraganaOnly\">{{ tableRow.word.pronunciation.hiraganaOnly }}</span>\n                <span *ngIf=\"!tableRow.word.pronunciation.hiraganaOnly\">---</span>\n            </td>\n            <td>\n                <section *ngIf=\"tableRow.description\" [innerHTML]=\"tableRow.description\"></section>\n                <span *ngIf=\"!tableRow.description\">---</span>\n            </td>\n        </tr>\n    </tbody>\n</table>\n"
        },
        {
            "name": "FormsOfAdjectivesCard",
            "id": "component-FormsOfAdjectivesCard-72dc6ca6c03d98816f1638781b12361f52d477c3ef8c6465f6e3ce1537fa81ea96b12ac7e85e0576a08b420677b00ed3d0106556b023221417e55e73f0cbb5ad",
            "file": "src/app/adjectives/forms-of-adjectives-card/forms-of-adjectives-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "forms-of-adjectives-card",
            "styleUrls": [
                "./forms-of-adjectives-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./forms-of-adjectives-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "iFormsOfAdjectivesCard",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showAnswerFor__NegativePast",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "showAnswerFor__NegativePresent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "showAnswerFor__PositivePast",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "onFailure",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onShowAnswerFor__NegativePast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onShowAnswerFor__NegativePresent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onShowAnswerFor__PositivePast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { iFormsOfAdjectivesCard } from './forms-of-adjectives-card.model';\n\n@Component({\n  selector: 'forms-of-adjectives-card',\n  templateUrl: './forms-of-adjectives-card.component.html',\n  styleUrls: ['./forms-of-adjectives-card.component.scss']\n})\nexport class FormsOfAdjectivesCard {\n  @Input() data: iFormsOfAdjectivesCard;\n\n  // local variables\n  showAnswerFor__NegativePresent: boolean = false;\n  showAnswerFor__PositivePast: boolean = false;\n  showAnswerFor__NegativePast: boolean = false;  \n\n  onShowAnswerFor__NegativePresent(): void {\n    this.showAnswerFor__NegativePresent = !this.showAnswerFor__NegativePresent;\n  }\n\n  onShowAnswerFor__PositivePast(): void {\n    this.showAnswerFor__PositivePast = !this.showAnswerFor__PositivePast;\n  }\n\n  onShowAnswerFor__NegativePast(): void {\n    this.showAnswerFor__NegativePast = !this.showAnswerFor__NegativePast;\n  }\n\n  onFailure():void {}\n  \n  onSuccess():void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    & >table {\r\n        &> tbody {\r\n            & > tr {\r\n                & > td:nth-child(2) {\r\n                    opacity: 0;\r\n                    transition: all 0.3s ease-in-out;\r\n                }\r\n\r\n                .answer__show {\r\n                    opacity: 1 !important;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}",
                    "styleUrl": "./forms-of-adjectives-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>{{ data.typeOfAdjective }}</p>\n<p [title]=\"data.adjective.pronunciation\">{{ data.adjective.kana }}</p>\n<p>{{ data.adjective.translation }}</p>\n\n<table>\n    <head></head>\n    <tbody>\n        <tr>\n            <td>Negative Present:</td>\n            <td [class.answer__show]=\"showAnswerFor__NegativePresent\">\n                <p [title]=\"data.negativePresent.pronunciation\">{{ data.negativePresent.kana}}</p>\n                <p>{{ data.negativePresent.translation }}</p>\n            </td>\n            <td><button [title]=\"'Show Answer'\" (click)=\"onShowAnswerFor__NegativePresent()\"><p class=\"material-icons\">visibility</p></button></td>\n            <td><button [title]=\"'I got it right.'\" (click)=\"onSuccess()\" [disabled]=\"!showAnswerFor__NegativePresent\"><p class=\"material-icons\">check</p></button></td>\n            <td><button [title]=\"'I got it wrong.'\" (click)=\"onFailure()\" [disabled]=\"!showAnswerFor__NegativePresent\"><p class=\"material-icons\">close</p></button></td>\n        </tr>\n        <tr>\n            <td>Positive Past:</td>\n            <td [class.answer__show]=\"showAnswerFor__PositivePast\">\n                <p [title]=\"data.positivePast.pronunciation\">{{ data.positivePast.kana}}</p>\n                <p>{{ data.positivePast.translation }}</p>\n            </td>\n            <td><button [title]=\"'Show Answer'\" (click)=\"onShowAnswerFor__PositivePast()\"><p class=\"material-icons\">visibility</p></button></td>\n            <td><button [title]=\"'I got it right.'\" (click)=\"onSuccess()\" [disabled]=\"!showAnswerFor__PositivePast\"><p class=\"material-icons\">check</p></button></td>\n            <td><button [title]=\"'I got it wrong.'\" (click)=\"onFailure()\" [disabled]=\"!showAnswerFor__PositivePast\"><p class=\"material-icons\">close</p></button></td>\n        </tr>\n        <tr>\n            <td>Negative Past:</td>\n            <td [class.answer__show]=\"showAnswerFor__NegativePast\">\n                <p [title]=\"data.negativePast.pronunciation\">{{ data.negativePast.kana}}</p>\n                <p>{{ data.negativePast.translation }}</p>\n            </td>\n            <td><button [title]=\"'Show Answer'\" (click)=\"onShowAnswerFor__NegativePast()\"><p class=\"material-icons\">visibility</p></button></td>\n            <td><button [title]=\"'I got it right.'\" (click)=\"onSuccess()\" [disabled]=\"!showAnswerFor__NegativePast\"><p class=\"material-icons\">check</p></button></td>\n            <td><button [title]=\"'I got it wrong.'\" (click)=\"onFailure()\" [disabled]=\"!showAnswerFor__NegativePast\"><p class=\"material-icons\">close</p></button></td>\n        </tr>\n    </tbody>\n</table>"
        },
        {
            "name": "FormsOfAdjectivesCardStack",
            "id": "component-FormsOfAdjectivesCardStack-573838d237d9d5c09504fad6bbe765726a57adb150ee1cb7e0a27509444edc474059ebcdc3fb886bc30ee0196ec7b3283b9bbed6c8ade30b589f965126eb6b01",
            "file": "src/app/adjectives/forms-of-adjectives-card-stack/forms-of-adjectives-card-stack.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "forms-of-adjectives-card-stack",
            "styleUrls": [
                "./forms-of-adjectives-card-stack.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./forms-of-adjectives-card-stack.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adjectives",
                    "defaultValue": "NA_ADJECTIVES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iFormsOfAdjectivesCard>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n// interfaces\nimport { iFormsOfAdjectivesCard } from '../forms-of-adjectives-card/forms-of-adjectives-card.model';\n\n// data\nimport { NA_ADJECTIVES } from 'src/app/data/data_formsOfAdjectives';\n\n@Component({\n  selector: 'forms-of-adjectives-card-stack',\n  templateUrl: './forms-of-adjectives-card-stack.component.html',\n  styleUrls: ['./forms-of-adjectives-card-stack.component.scss'],\n})\nexport class FormsOfAdjectivesCardStack {\n  adjectives: Array<iFormsOfAdjectivesCard> = NA_ADJECTIVES;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./forms-of-adjectives-card-stack.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<forms-of-adjectives-card\n  *ngFor=\"let adjective of adjectives\"\n  [data]=\"adjective\"\n></forms-of-adjectives-card>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "Home",
            "id": "component-Home-76f5d285362d9c806d50811576721f6d4e68dd58036405cc17f5b0d1133836203f6fbffbc1124bd75f325c99d26413e043d55b3862692fe6c016d47b28309613",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class Home {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": ""
        },
        {
            "name": "Imprint",
            "id": "component-Imprint-e2aeca44ea4d03cd337b955d1cb682819620907d7796a18a443dcb6ea0f13d7f2b0e64a7a8f041d149b7628e86e7eb4af02ba7f3aa3a8df7a433894e59884ac8",
            "file": "src/app/legal-notices/imprint/imprint.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "imprint",
            "styleUrls": [
                "./imprint.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./imprint.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'imprint',\n  templateUrl: './imprint.component.html',\n  styleUrls: ['./imprint.component.scss'],\n})\nexport class Imprint {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./imprint.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h4>Contact</h4>\n<p>Contact of the Owner&nbsp;&nbsp;|&nbsp;&nbsp;Service Provider</p>\n<p>\n  This website is my academic as well as business Portfolio. Therefore, neither\n  this website, nor its sub pages, have any kind of commercial character\n  whatsoever. Therefore, I subsequently state Name and Address of the Owner<span\n    class=\"comment\"\n    >[Service Provider]&nbsp;</span\n  >— André-Pascal Werthwein.&nbsp;<sup>[§1 Abs. 4 TMG, §55 Abs. 1 RstV]</sup>\n</p>\n<table class=\"table-contact\">\n  <thead></thead>\n  <tbody>\n    <tr>\n      <td><i class=\"material-icons\">fingerprint</i></td>\n      <td>André-Pascal Werthwein</td>\n    </tr>\n    <tr>\n      <td><i class=\"material-icons\">home</i></td>\n      <td>Friedrichstraße 72,<br />76646 Bruchsal<br />Deutschland</td>\n    </tr>\n    <tr>\n      <td><i class=\"material-icons\">mail_outline</i></td>\n      <td>\n        <address>\n          <a\n            class=\"text-anchor\"\n            href=\"&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#105;&amp;#110;&amp;#102;&amp;#111;&amp;#64;&amp;#97;&amp;#110;&amp;#100;&amp;#114;&amp;#101;&amp;#119;&amp;#101;&amp;#114;&amp;#116;&amp;#104;&amp;#119;&amp;#101;&amp;#105;&amp;#110;&amp;#46;&amp;#100;&amp;#101;\"\n            >info[at]<span style=\"display: none\">fuck-the-spam-bot</span\n            >andrewerthwein.de</a\n          >\n        </address>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h4>The Accountability for Content</h4>\n<p>Contents, Media & Information</p>\n<p>\n  All contents and media of this website have been created with utmost care.\n  However, neither Accuracy, Completeness nor Topicality can be guaranteed.\n  According to statutory provisions, the service provider&nbsp;<span\n    class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >— André-Pascal Werthwein — is responsible for the contents on this Website,\n  as well as on its sub pages.&nbsp;<sup>[§ 7 Abs. 1 TMG]</sup>\n</p>\n<p>\n  The service provider&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >— André-Pascal Werthwein — is not obliged to monitor the transmitted or\n  stored information of third parties. Concerning this matter the service\n  provider&nbsp;<span class=\"comment\">[Owner of this Website]&nbsp;</span>—\n  André-Pascal Werthwein — is also not obliged to investigate circumstances\n  pointing to illegal activities.&nbsp;<sup\n    >[§ 7 Abs. 2 TMG, §§ 8 bis 10 TMG]</sup\n  >\n</p>\n<p>\n  The obligations to remove or block the use of information under generally\n  applicable laws remain unaffected by this.&nbsp;<span class=\"comment\"\n    >[§ 7 Abs. 3 Satz 1 TMG]&nbsp;</span\n  >Liability concerning this is first possible with the knowledge of the\n  concrete infringements.&nbsp;<span class=\"highlighting\"\n    >With the recognition of infringements the contents in question will\n    immediately be removed.</span\n  >\n</p>\n<h4>The Accountability for Hyperlinks</h4>\n<p>Hyperlinks to websites of third parties</p>\n<p>\n  This website, as well as its sub pages, contain hyperlinks to Websites of\n  third parties. The contents of these,\n  <span class=\"comment\">[linked]&nbsp;</span>Websites can not be influenced.\n  Therefore, the service provider of this website&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >— André-Pascal Werthwein — can not be held responsible for the contents of\n  these&nbsp;<span class=\"comment\">[linked]&nbsp;</span>Websites. For the\n  contents of these&nbsp;<span class=\"comment\">[linked]&nbsp;</span>Websites, is\n  always the Service Provider&nbsp;<span class=\"comment\">[Owner]&nbsp;</span>of\n  the website in question responsible. Before linking to these\n  Websites&nbsp;<span class=\"comment\">[of third parties]&nbsp;</span>, the\n  websites were checked for infringements. At the time of linking to these\n  websites&nbsp;<span class=\"comment\">[of third parties]&nbsp;</span>no\n  infringements whatsoever were recognizable.\n</p>\n<p>\n  A permanent monitoring of contents of these linked Websites of third parties\n  can not be reasonably expected, without any concrete indications of\n  infringements.&nbsp;<span class=\"highlighting\"\n    >With the recognition of infringements the hyperlinks to Websites [of third\n    parties] in question will immediately be removed.</span\n  >\n</p>\n<h4>The Copyright</h4>\n<p>The Copyright of the Owner&nbsp;&nbsp;|&nbsp;&nbsp;Service Provider</p>\n<p>\n  All contents and media of this Website, as well as its sub pages, created by\n  the service provider of this website&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >— André-Pascal Werthwein — are subject to German Copyright Law.&nbsp;<span\n    class=\"hightlighting\"\n    >The duplication, modification, distribution and any other way of\n    utilization beyond the limits of the Copyright Law need explicit\n    approval.&nbsp;</span\n  >Downloads and Copies of this Website are allowed only for private,\n  non-commercial use.\n</p>\n<p>\n  All the contents of this Website, as well as its sub pages, that are not\n  created by the service provider of this website&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >— André-Pascal Werthwein — respect the Copyright of third parties. These\n  contents are explicitly marked as contents of third parties. Furthermore, the\n  rights of co-authors are respected as well. Should you however recognize any\n  infringements, please give notice.&nbsp;<span class=\"highlighting\"\n    >With the recognition of infringements the contents in question will\n    immediately be removed.</span\n  >\n</p>\n"
        },
        {
            "name": "Kana",
            "id": "component-Kana-fae6f2a8b3552bca114844c7e28fddd29d014fae87d54f59380099e7877e3f2fca1dc77a9ce5dc997c28e5f4f01575a75366dbdfbad3090696d0d65e7f760865",
            "file": "src/app/writing/kana/kana.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kana",
            "styleUrls": [
                "./kana.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./kana.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "iKana",
                    "decorators": []
                },
                {
                    "name": "showGrid",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { iKana } from './kana.model';\n\n@Component({\n  selector: 'kana',\n  templateUrl: './kana.component.html',\n  styleUrls: ['./kana.component.scss'],\n})\nexport class Kana implements OnChanges {\n  @Input() showGrid?: boolean = true;\n  @Input() data: iKana;\n\n  ngOnChanges(changes: SimpleChanges) {\n    // if (\n    //   changes &&\n    //   changes['data'].previousValue != changes['data'].currentValue\n    // ) {\n    //   this.data = changes['data'].currentValue;\n    // }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"sizes\";\r\n@import \"mixins\";\r\n\r\n:host {\r\n  display: block;\r\n  width: $base__size--xxl;\r\n  height: $base__size--xxl;\r\n  border: $base__size--xxxs black solid;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    cursor: help;\r\n  }\r\n\r\n  .kana__grid {\r\n    width: $base__size--xxl;\r\n    height: $base__size--xxl;\r\n    display: grid;\r\n    grid-template-columns: $base__size--l $base__size--l;\r\n    grid-template-rows: $base__size--l $base__size--l;\r\n    grid-gap: 0;\r\n\r\n    .kana__grid--cell {\r\n      width: $base__size--l;\r\n      height: $base__size--l;\r\n\r\n      &:first-child {\r\n        border-right: thin black dotted;\r\n        border-bottom: thin black dotted;\r\n      }\r\n\r\n      &:last-child {\r\n        border-left: thin black dotted;\r\n        border-top: thin black dotted;\r\n      }\r\n    }\r\n  }\r\n\r\n  .kana__syllable {\r\n    width: $base__size--xxl;\r\n    height: $base__size--xxl;\r\n    margin: -$base__size--xxl 0 0 0;\r\n    @include container__single-element--center-center;\r\n\r\n    .japanese {\r\n      margin: 0;\r\n      overflow: hidden;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./kana.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div *ngIf=\"showGrid\" class=\"kana__grid\">\n  <section class=\"kana__grid--cell\"></section>\n  <section class=\"kana__grid--cell\"></section>\n  <section class=\"kana__grid--cell\"></section>\n  <section class=\"kana__grid--cell\"></section>\n</div>\n<div class=\"kana__syllable\" [title]=\"data.pronunciation\">\n  <h1 class=\"japanese\">{{ data.kana }}</h1>\n</div>\n"
        },
        {
            "name": "KanaDropdown",
            "id": "component-KanaDropdown-1ebcb3297be2bbb5e4898a719d17750009f9d6f582857a1e6bc8e4f2c1390d12d63383b8e9ec25669a926a437de9e9265e0f85704cba8e857ab603dcf580a25e",
            "file": "src/app/shared-components/kana-dropdown/kana-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kana-dropdown",
            "styleUrls": [
                "./kana-dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./kana-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Array<iKana>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "choice",
                    "defaultValue": "new EventEmitter<iKana>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<iKana>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chosenKana",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "chosenPronunciation",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "showDropdownOptions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "onChooseKana",
                    "args": [
                        {
                            "name": "kana",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pronunciation",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "kana",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pronunciation",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onToggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n// interfaces\nimport { iKana } from 'src/app/writing/kana/kana.model';\n\n@Component({\n  selector: 'kana-dropdown',\n  templateUrl: './kana-dropdown.component.html',\n  styleUrls: ['./kana-dropdown.component.scss'],\n})\nexport class KanaDropdown {\n  @Input() data: Array<iKana>;\n  @Output() choice: EventEmitter<iKana> = new EventEmitter<iKana>();\n\n  // local variables\n  showDropdownOptions: boolean = false;\n  chosenKana: string = '';\n  chosenPronunciation: string = '';\n\n  onToggleDropdown(): void {\n    this.showDropdownOptions = !this.showDropdownOptions;\n  } // toggles between showing and hiding of dropdown options\n\n  onChooseKana(kana: string, pronunciation: string): void {\n    // ?? updating dropdown\n    this.chosenKana = kana;\n    this.chosenPronunciation = pronunciation;\n\n    // ?? emitting choice of kana\n    this.choice.emit({ kana, pronunciation });\n\n    // ?? close dropdown\n    this.onToggleDropdown();\n  } // updates dropdown and emits chosen kana\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"sizes\";\r\n@import \"mixins\";\r\n\r\n$kana-dropdown__options--max-height: calc(\r\n  (#{$base__size--xxl} * 5) + (#{$base__size--xxs} * 4)\r\n); // ?? enough space for 5 kana including spacing\r\n\r\n:host {\r\n  & > button {\r\n    padding: 0;\r\n    border: none;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n\r\n    & > section {\r\n      width: $base__size--l;\r\n      height: calc(#{$base__size--xxl} + #{$base__size--xxxs});\r\n      margin: 0 0 0 $base__size--xxs;\r\n      border: thin black solid;\r\n      @include container__single-element--center-center;\r\n    }\r\n  }\r\n\r\n  .kana-dropdown__options {\r\n    position: absolute;\r\n    width: calc(#{$base__size--xxl} + #{$base__size--l} + #{$base__size--xs});\r\n    margin: $base__size--xxs 0 0 0;\r\n    max-height: 0;\r\n    overflow: hidden;\r\n\r\n    & > kana:not(:last-child) {\r\n      margin: 0 0 $base__size--xxs 0;\r\n    }\r\n  }\r\n\r\n  .kana-dropdown__options--shown {\r\n    max-height: $kana-dropdown__options--max-height;\r\n    overflow: auto;\r\n  }\r\n}\r\n",
                    "styleUrl": "./kana-dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button (click)=\"onToggleDropdown()\">\n  <kana\n    [showGrid]=\"true\"\n    [data]=\"{ kana: chosenKana, pronunciation: chosenPronunciation }\"\n  ></kana>\n  <section>\n    <p class=\"material-icons\">expand_more</p>\n  </section>\n</button>\n<section\n  class=\"kana-dropdown__options\"\n  [class.kana-dropdown__options--shown]=\"showDropdownOptions\"\n>\n  <kana\n    *ngFor=\"let kana of data\"\n    [showGrid]=\"true\"\n    [data]=\"kana\"\n    (click)=\"onChooseKana(kana.kana, kana.pronunciation)\"\n  ></kana>\n</section>\n"
        },
        {
            "name": "KanjiWithHiragana",
            "id": "component-KanjiWithHiragana-c4faaae3c7aad2bfac3b0979a14ad07955421ff53ce871e7951ce931b93e6d56b5f6376aaf92593b5a4f9f0b9250087b80b84b56a3b2e9d73589bc095a0d4d6e",
            "file": "src/app/shared-components/kanji-with-hiragana/kanji-with-hiragana.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kanji-with-hiragana",
            "styleUrls": [
                "./kanji-with-hiragana.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./kanji-with-hiragana.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "iKanjiWithHiragana",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { iKanjiWithHiragana } from './kanji-with-hiragana.model';\n\n@Component({\n  selector: 'kanji-with-hiragana',\n  templateUrl: './kanji-with-hiragana.component.html',\n  styleUrls: ['./kanji-with-hiragana.component.scss']\n})\nexport class KanjiWithHiragana {\n  @Input() data: iKanjiWithHiragana;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    display: inline-block;\r\n\r\n    & > div {\r\n        width: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        text-align: center;\r\n\r\n        .japanese__hiragana {\r\n            font-size: 0.6rem;\r\n\r\n            & > p {\r\n                width: 100%;\r\n                display: inline;\r\n                line-height: 1;\r\n                margin: 0;\r\n            }\r\n        }\r\n\r\n        & > h1 {\r\n            width: 100%;\r\n            display: inline;\r\n            line-height: 1;\r\n            margin: 0;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./kanji-with-hiragana.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div [title]=\"data.pronunciation\">\n    <section class=\"japanese__hiragana\">\n        <p class=\"japanese\">{{ data.hiragana }}</p>\n    </section>\n    <h1 class=\"japanese\">{{ data.kanji }}</h1>\n</div>"
        },
        {
            "name": "LearnerToolbar",
            "id": "component-LearnerToolbar-457a96a740a7f5819f2a275465159c1ea19bf739acf2be526db2cd387f4c8e564faf6746f39d8bb9e95979be7c274035bf5980838def5fbc014d09131ef14d6b",
            "file": "src/app/learner-feedback/learner-toolbar/learner-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "learner-toolbar",
            "styleUrls": [
                "./learner-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./learner-toolbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "learnerFailure",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "learnerFailurePercentage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "learnerSuccess",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "learnerSuccessPercentage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "calculatePercentage",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLearnerStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLearnerStatusUpdate",
                    "args": [
                        {
                            "name": "success",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "success",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResetLearnerStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'learner-toolbar',\n  templateUrl: './learner-toolbar.component.html',\n  styleUrls: ['./learner-toolbar.component.scss'],\n})\nexport class LearnerToolbar implements OnInit {\n  learnerSuccess: number = 0;\n  learnerSuccessPercentage: number = 0;\n  learnerFailure: number = 0;\n  learnerFailurePercentage: number = 0;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.getLearnerStatus();\n  }\n\n  private getLearnerStatus(): void {\n    let localStorageLearnerStatus: string | null =\n      window.localStorage.getItem('learnerStatus');\n    let currentLearnerStatus: Array<boolean>;\n\n    if (localStorageLearnerStatus != null) {\n      currentLearnerStatus = JSON.parse(localStorageLearnerStatus);\n\n      // ?? absolute\n      this.learnerSuccess = currentLearnerStatus.filter(Boolean).length;\n      this.learnerFailure = currentLearnerStatus.length - this.learnerSuccess;\n\n      // ?? percentage\n      this.learnerSuccessPercentage = this.calculatePercentage(\n        this.learnerSuccess\n      );\n      this.learnerFailurePercentage = this.calculatePercentage(\n        this.learnerFailure\n      );\n    }\n  } // reading current learner-status from local storage\n\n  onResetLearnerStatus(): void {\n    window.localStorage.removeItem('learnerStatus');\n    this.learnerSuccess = 0;\n    this.learnerSuccessPercentage = 0;\n    this.learnerFailure = 0;\n    this.learnerFailurePercentage = 0;\n  } // resets current learner-status\n\n  onLearnerStatusUpdate(success: boolean): void {\n    let currentLearnerStatus: string | null =\n      window.localStorage.getItem('learnerStatus');\n    let learnerStatus: Array<boolean> = [];\n\n    if (currentLearnerStatus != null) {\n      learnerStatus = JSON.parse(currentLearnerStatus);\n    }\n\n    learnerStatus.push(success);\n    window.localStorage.setItem('learnerStatus', JSON.stringify(learnerStatus));\n\n    // ?? absolute\n    this.learnerSuccess = learnerStatus.filter(Boolean).length;\n    this.learnerFailure = learnerStatus.length - this.learnerSuccess;\n\n    // ?? percentages\n    this.learnerSuccessPercentage = this.calculatePercentage(\n      this.learnerSuccess\n    );\n\n    this.learnerFailurePercentage = this.calculatePercentage(\n      this.learnerFailure\n    );\n  } // saving / updating the new learner-status in local storage for visualization\n\n  calculatePercentage(value: number): number {\n    return Math.floor(\n      (value / (this.learnerSuccess + this.learnerFailure)) * 100\n    );\n  } // returns the percentage of an input relative to the sum of all answers\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  .learner__success--percentage,\r\n  .learner__failure--percentage {\r\n    width: 80px;\r\n    height: 8px;\r\n\r\n    & > section {\r\n      height: 8px;\r\n      background-color: coral;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./learner-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button title=\"I got it right.\" (click)=\"onLearnerStatusUpdate(true)\">\n  <p class=\"material-icons\">check</p>\n</button>\n<button title=\"I got it wrong.\" (click)=\"onLearnerStatusUpdate(false)\">\n  <p class=\"material-icons\">close</p>\n</button>\n<button\n  title=\"Reset current learing progress.\"\n  (click)=\"onResetLearnerStatus()\"\n>\n  <p class=\"material-icons\">restart_alt</p>\n</button>\n\n<!-- ?? success -->\n<p>Success: {{ learnerSuccess }} / {{ learnerSuccess + learnerFailure }}</p>\n<div class=\"learner__success--percentage\">\n  <section [ngStyle]=\"{ width: learnerSuccessPercentage + '%' }\"></section>\n</div>\n<p>{{ learnerSuccessPercentage }} %</p>\n\n<!-- ?? failure -->\n<p>Failure: {{ learnerFailure }} / {{ learnerSuccess + learnerFailure }}</p>\n<div class=\"learner__failure--percentage\">\n  <section [ngStyle]=\"{ width: learnerFailurePercentage + '%' }\"></section>\n</div>\n<p>{{ learnerFailurePercentage }} %</p>\n"
        },
        {
            "name": "LegalNoticesFooterComponent",
            "id": "component-LegalNoticesFooterComponent-af8dd1ce277b97d0a51ed78f5821c1edd5d6d306ad2ca25b9de38b307d31d8fb9b3d3a13664a1d01e1fce218013efa411f40daaeece87ef332dfbb772dd4525a",
            "file": "src/app/legal-notices/legal-notices-footer/legal-notices-footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "legal-notices-footer",
            "styleUrls": [
                "./legal-notices-footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./legal-notices-footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'legal-notices-footer',\n  templateUrl: './legal-notices-footer.component.html',\n  styleUrls: ['./legal-notices-footer.component.scss'],\n})\nexport class LegalNoticesFooterComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./legal-notices-footer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<footer>\n  <a routerLink=\"../legal-notices/contact/\">Contact</a>\n  <a routerLink=\"../legal-notices/imprint/\">Imprint</a>\n  <a routerLink=\"../legal-notices/privacy-policy/\">Privacy Policy</a>\n</footer>\n"
        },
        {
            "name": "OverviewHiragana",
            "id": "component-OverviewHiragana-a09b84f9b9a5c1bed519257cc9e7bf7bd7cd239780313b1bf315af6075f654aadfe272e25880d9721977cb618143fdf1755bf06178a924761b431ff0298be75a",
            "file": "src/app/writing/overview-hiragana/overview-hiragana.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "overview-hiragana",
            "styleUrls": [
                "./overview-hiragana.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./overview-hiragana.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hiraganaK",
                    "defaultValue": "HIRAGANA_K",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "hiraganaVowels",
                    "defaultValue": "HIRAGANA_VOWELS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "hiraganaY",
                    "defaultValue": "HIRAGANA_Y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n// interfaces\nimport { iKana } from '../kana/kana.model';\n\n// data\nimport {\n  HIRAGANA_K,\n  HIRAGANA_VOWELS,\n  HIRAGANA_Y,\n} from 'src/app/data/data_hiraganaSyllables';\n\n@Component({\n  selector: 'overview-hiragana',\n  templateUrl: './overview-hiragana.component.html',\n  styleUrls: ['./overview-hiragana.component.scss'],\n})\nexport class OverviewHiragana {\n  hiraganaVowels: Array<iKana> = HIRAGANA_VOWELS;\n  hiraganaK: Array<iKana> = HIRAGANA_K;\n  hiraganaY: Array<iKana> = HIRAGANA_Y;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"sizes\";\r\n\r\n:host {\r\n  .overview__row--syllables {\r\n    display: grid;\r\n    grid-template-columns: repeat(5, $base__size--xxl);\r\n    grid-column-gap: $base__size--xs;\r\n    margin: 0 0 $base__size--m 0;\r\n  }\r\n}\r\n",
                    "styleUrl": "./overview-hiragana.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"overview__row--syllables\">\r\n  <kana *ngFor=\"let kana of hiraganaVowels\" [data]=\"kana\"></kana>\r\n</section>\r\n\r\n<section class=\"overview__row--syllables\">\r\n  <kana *ngFor=\"let kana of hiraganaK\" [data]=\"kana\"></kana>\r\n</section>\r\n\r\n<section class=\"overview__row--syllables\">\r\n  <kana *ngFor=\"let kana of hiraganaY\" [data]=\"kana\"></kana>\r\n</section>\r\n"
        },
        {
            "name": "OverviewKatakana",
            "id": "component-OverviewKatakana-a197b710b85f8e957e95adcfa696a5f92f5ee1ec6e0366522d08a786359406a50520384f7d0b513faa9e4347cc67fa826cd5fe64093a0eebfe597c40156e4e1a",
            "file": "src/app/writing/overview-katakana/overview-katakana.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "overview-katakana",
            "styleUrls": [
                "./overview-katakana.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./overview-katakana.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "katakanaK",
                    "defaultValue": "KATAKANA_K",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "katakanaVowels",
                    "defaultValue": "KATAKANA_VOWELS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "katakanaY",
                    "defaultValue": "KATAKANA_Y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n// interfaces\nimport { iKana } from '../kana/kana.model';\n\n// data\nimport {\n  KATAKANA_K,\n  KATAKANA_VOWELS,\n  KATAKANA_Y,\n} from 'src/app/data/data_katakanaSyllables';\n\n@Component({\n  selector: 'overview-katakana',\n  templateUrl: './overview-katakana.component.html',\n  styleUrls: ['./overview-katakana.component.scss'],\n})\nexport class OverviewKatakana {\n  katakanaVowels: Array<iKana> = KATAKANA_VOWELS;\n  katakanaK: Array<iKana> = KATAKANA_K;\n  katakanaY: Array<iKana> = KATAKANA_Y;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"sizes\";\r\n\r\n:host {\r\n  .overview__row--syllables {\r\n    display: grid;\r\n    grid-template-columns: repeat(5, $base__size--xxl);\r\n    grid-column-gap: $base__size--xs;\r\n    margin: 0 0 $base__size--m 0;\r\n  }\r\n}\r\n",
                    "styleUrl": "./overview-katakana.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"overview__row--syllables\">\n  <kana *ngFor=\"let kana of katakanaVowels\" [data]=\"kana\"></kana>\n</section>\n\n<section class=\"overview__row--syllables\">\n  <kana *ngFor=\"let kana of katakanaK\" [data]=\"kana\"></kana>\n</section>\n\n<section class=\"overview__row--syllables\">\n  <kana *ngFor=\"let kana of katakanaY\" [data]=\"kana\"></kana>\n</section>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PrivacyPolicy",
            "id": "component-PrivacyPolicy-d2ff2cce028ed47a399d3690710f100a2a77c3de028c0dab5df1156c8b8fce6409c78b112c3e3e95e451dc2b4ef0b57a8dc8b5a0c65da044f9c3a928d5cb2598",
            "file": "src/app/legal-notices/privacy-policy/privacy-policy.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "privacy-policy",
            "styleUrls": [
                "./privacy-policy.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./privacy-policy.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.scss'],\n})\nexport class PrivacyPolicy {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./privacy-policy.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h4>I. The Privacy Policy at a Glance</h4>\n<p>An overview of the Privacy Policy</p>\n<h5>General Information</h5>\n<p>\n  Here in the Privacy Policy Statement a transparent overview is given, which\n  explains what happens with personal data on this Website. Personal Data is\n  Data, by which the User of this Website&nbsp;<span class=\"comment\"\n    >[You]&nbsp;</span\n  >can be personally identified.\n</p>\n<p>Detailed information can be found in the following paragraphs.</p>\n<h5>The data collection on this Website</h5>\n<h6>Who is responsible for the data collection on this Website?</h6>\n<p>\n  The processing of data on this Website is done by the service\n  provider&nbsp;<span class=\"comment\">[Owner of this Website]&nbsp;</span>–\n  André-Pascal Werthwein.&nbsp;<span class=\"comment\"\n    >[The contact options can be found in »Contact« or »Imprint«.]</span\n  >\n</p>\n<table class=\"table-contact\">\n  <thead></thead>\n  <tbody>\n    <tr>\n      <td><i class=\"material-icons\">fingerprint</i></td>\n      <td>André-Pascal Werthwein</td>\n    </tr>\n    <tr>\n      <td><i class=\"material-icons\">home</i></td>\n      <td>Friedrichstraße 72,<br />76646 Bruchsal<br />Germany</td>\n    </tr>\n    <tr>\n      <td><i class=\"material-icons\">mail_outline</i></td>\n      <td>\n        <address>\n          <a\n            class=\"text-anchor\"\n            href=\"&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#105;&amp;#110;&amp;#102;&amp;#111;&amp;#64;&amp;#97;&amp;#110;&amp;#100;&amp;#114;&amp;#101;&amp;#119;&amp;#101;&amp;#114;&amp;#116;&amp;#104;&amp;#119;&amp;#101;&amp;#105;&amp;#110;&amp;#46;&amp;#100;&amp;#101;\"\n            >info[at]<span style=\"display: none\">fuck-the-spam-bot</span\n            >andrewerthwein.de</a\n          >\n        </address>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h6>How is this [Your] data collected on this Website?</h6>\n<p>\n  On the one hand this&nbsp;<span class=\"comment\">[Your]&nbsp;</span>data is\n  collected, by you transmitting your data yourself. This for example happens,\n  when you use the contact form provided on this Website.\n</p>\n<p>\n  On the other hand, this&nbsp;<span class=\"comment\">[Your]&nbsp;</span>data is\n  also collected automatically by different IT-Systems implemented on this\n  Website. This data is usually technical data. This data can for example be the\n  Internet Browser you use, the Operating System you use or the time you entered\n  this Website. This collection of data happens automatically, as soon as you\n  enter this Website.\n</p>\n<h6>What is this [Your] data used for?</h6>\n<p>\n  A part of this collected data is used to provide/display this Website without\n  errors. Other data can be used to analyze your user behavior.\n</p>\n<h6>What rights do you have, concerning your data?</h6>\n<p>\n  At any time you have the right to request information on personal data\n  collected about you, free of charge. This information includes origin,\n  receiver and also the purpose of the data collected. Furthermore, you have the\n  right to request the correction, blocking and deletion of this — your —\n  stored, personal data. You also, under certain circumstances, have the right\n  to limit the processing of the personal data stored/collected about\n  you.&nbsp;<span class=\"comment\"\n    >[Further information on this can be found in the chapter »Your Right to\n    limit the Processing of personal Data«.]</span\n  >\n</p>\n<p>\n  Should you have any questions concerning this or concerning Privacy Protection\n  on this Website in general, feel free to contact the service\n  provider&nbsp;<span class=\"comment\">[Owner of this Website]&nbsp;</span>–\n  André-Pascal Werthwein. Contact options can be found in&nbsp;<a\n    class=\"anchor-text\"\n    href=\"contact.html\"\n    target=\"_blank\"\n    rel=\"noopener nofollow noreferrer\"\n    >»Contact«&nbsp;</a\n  >or&nbsp;<a\n    class=\"anchor-text\"\n    href=\"imprint.html\"\n    target=\"_blank\"\n    rel=\"noopener nofollow noreferrer\"\n    >»Imprint«</a\n  >. Of course, you also have the right to a file a complaint with the\n  supervisory authority responsible.\n</p>\n<h5>The Analyzing-Tools and Tools offered by third parties</h5>\n<p>\n  By visiting this Website your Surfing behavior can be statistically analyzed.\n  This analysis is made using Cookies and Analyzing-Programs. The analysis of\n  your Surfing behavior is anonymous and can not be traced back to you. You can\n  file an objection against this analysis, or prevent the analysis by not using\n  certain tools/options.\n  <span class=\"comment\"\n    >[Details on this matter can be found in the following Privacy Policy\n    Statement.]</span\n  >\n</p>\n<p>\n  You can file an objection against this analysis. The ways in which you can\n  file an objection are explained in the following Privacy Policy Statement.\n</p>\n<h4>II. General Information and Mandatory Information</h4>\n<p>Your rights and general Information</p>\n\n<h5>The Data Protection</h5>\n<p>\n  The service provider&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >– André-Pascal Werthwein — takes the protection of your data seriously. The\n  data collected on this webste is treated confidentially and in accordance with\n  the legal data protection regulations as well as this privacy policy\n  statement.\n</p>\n<p>\n  When using this Website, various personal data is collected. »Personal Data«\n  is to be understood as data which makes it possible to personally identify\n  you. This Privacy Policy Statement sums up, what data is collected and what\n  this data is collected for. Furthermore, this Privacy Policy Statement also\n  explains, what the collected data is used for\n</p>\n<p>\n  It is pointed out, that the communication on the internet&nbsp;<span\n    class=\"comment\"\n    >[e.g.: Communication via E-Mail]&nbsp;</span\n  >can have security breaches. A complete protection of the collected data from\n  access by third parties is therefore not possible.\n</p>\n<h5>The Information on the responsible Office/Person</h5>\n<p>\n  Responsible for the processing of data collected by this Website is the\n  service provider&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >– André-Pascal Werthwein.\n</p>\n<table class=\"table-contact\">\n  <thead></thead>\n  <tbody>\n    <tr>\n      <td><i class=\"material-icons\">fingerprint</i></td>\n      <td>André-Pascal Werthwein</td>\n    </tr>\n    <tr>\n      <td><i class=\"material-icons\">home</i></td>\n      <td>Friedrichstraße 72,<br />76646 Bruchsal<br />Germany</td>\n    </tr>\n    <tr>\n      <td><i class=\"material-icons\">mail_outline</i></td>\n      <td>\n        <address>\n          <a\n            class=\"text-anchor\"\n            href=\"&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#105;&amp;#110;&amp;#102;&amp;#111;&amp;#64;&amp;#97;&amp;#110;&amp;#100;&amp;#114;&amp;#101;&amp;#119;&amp;#101;&amp;#114;&amp;#116;&amp;#104;&amp;#119;&amp;#101;&amp;#105;&amp;#110;&amp;#46;&amp;#100;&amp;#101;\"\n            >info[at]<span style=\"display: none\">fuck-the-spam-bot</span\n            >andrewerthwein.de</a\n          >\n        </address>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<p>\n  This responsible Office/Person is a natural or legal person, who alone or in\n  cooperation with others, decides about the purpose as well as the means of the\n  processing of personal data on this Website.\n</p>\n<h5>Your revocation of your consent to Data Processing</h5>\n<p>\n  A lot of actions, which process data, are only possible with your explicit\n  consent. After giving your consent, you — at any time — have the right to\n  revoke the given consent. For this revocation an informal notification is\n  sufficient.&nbsp;<span class=\"comment\"\n    >[The contact options can be found in&nbsp;\n    <a\n      class=\"anchor-text\"\n      href=\"contact.html\"\n      target=\"_blank\"\n      rel=\"noopener nofollow noreferrer\"\n      >»Contact«&nbsp;</a\n    >or&nbsp;<a\n      class=\"anchor-text\"\n      href=\"imprint.html\"\n      target=\"_blank\"\n      rel=\"noopener nofollow noreferrer\"\n      >»Imprint«</a\n    >.]</span\n  >\n</p>\n<p>\n  The legitimacy of the processing of data, before the moment of revocation,\n  remains unaffected by the revocation.\n</p>\n<section class=\"highlighting-frame\">\n  <section>\n    <h5>\n      Your Right of Revocation against the collection of data in special cases\n      as well as against Direct Advertising [Art. 21 DSGVO]\n    </h5>\n    <p>\n      If the data is processed on the basis of DSGVO-Regulations&nbsp;<sup\n        >[Art. 6 Para. 1 lit. e or f DSGVO]</sup\n      >, you have — at any time — the right, for reasons that arise from their\n      personal situation, to file an objection against the processing of your\n      personal data. This also applies to&nbsp;<abbr\n        title=\"Creating a complete picture of a Personality\"\n        >Profiling&nbsp;</abbr\n      ><dfn class=\"comment\"\n        >[= Creating a complete picture of a Personality]</dfn\n      >, based on these regulations. The respective legal basis on which data\n      processing is based on this Website can be found in this Privacy Policy.\n    </p>\n    <p>\n      If you file an objection, the affected, personal data is no longer\n      processed, unless there are compelling, legitimate reasons for the\n      processing of the data that outweigh your interests, rights and freedoms.\n      Another exception applies if the data processing serves the Assertion,\n      Exercise or Defense of legal claims.&nbsp;<sup\n        >[Art. 21 Para. 1 DSGVO]</sup\n      >\n    </p>\n    <p>\n      If personal data is processed for Direct Advertising, you — at any time —\n      have the right to file an objection against the processing of personal\n      data, for the purpose of Direct Advertising. This also applies\n      to&nbsp;<abbr title=\"Creation of a overall view of a personality\"\n        >Profiling&nbsp;</abbr\n      ><dfn class=\"comment\">[= Creation of a overall view of a personality]</dfn\n      >, if it is connected to such Direct Advertising. After your objection, no\n      more personal data is processed for the purpose of Direct\n      Advertising.&nbsp;<sup>[Contradiction after Art. 21 Abs. 2 DSGVO]</sup>\n    </p>\n  </section>\n</section>\n<h5>\n  Your Right to file a complaint with the Supervisory Authority responsible\n</h5>\n<p>\n  If there are infringements of the DSGVO there is, for the person affected, a\n  right to file a complaint with the Supervisory Authority responsible,\n</p>\n<ul class=\"list\">\n  <li>\n    in the Member State&nbsp;<span class=\"comment\"\n      >[of the European Union]&nbsp;</span\n    >of your habitual residence.\n  </li>\n  <li>\n    in the Member State&nbsp;<span class=\"comment\"\n      >[of the European Union]&nbsp;</span\n    >of your ordinary workplace..\n  </li>\n  <li>at the place of the presumed infringement.</li>\n</ul>\n<p>\n  This right of complaint applies, regardless of other legal, administrative\n  or&nbsp;<abbr\n    title=\"legal means of contesting an administrative or judicial decision\"\n    >judicial remedies</abbr\n  >.&nbsp;<dfn class=\"comment\"\n    >[= legal means of contesting an administrative or judicial decision]</dfn\n  >\n</p>\n<h5>Your Right for Data Transferability</h5>\n<p>\n  You have the right for the delivery of data, which is automatically processed\n  on the basis of your consent or the basis of a contract. According to this\n  right, the data is delivered to you — or a third party — in common,\n  machine-readable formats.\n</p>\n<p>\n  If you request the delivery of the aforementioned data to a third party, this\n  delivery is only made within technical feasibility.\n</p>\n<h5>The SSL- or TLS-Encoding</h5>\n<p>\n  For safety reasons, this Website uses for the transmission of confidential\n  data&nbsp;<span class=\"comment\">[e.g.: Requests]</span>, that is sent to the\n  service provider, the&nbsp;<span class=\"highlighting\"\n    >SSL- or TLS-Encoding</span\n  >. This encoded connection can be recognized by the Lock-Symbol or the\n  »https://« in the&nbsp;<abbr title=\"Address of the Website\">URL&nbsp;</abbr\n  ><dfn class=\"comment\">[= Address of the Website]&nbsp;</dfn>in the address bar\n  of your Internet Browser.&nbsp;<span class=\"comment\"\n    >[In some Internet Browsers the Lock-Symbol is additionally colored\n    green.]</span\n  >\n</p>\n<p>\n  If the encoding is active, that data, you send to the service\n  provider&nbsp;<span class=\"comment\">[Owner of this Website]&nbsp;</span>–\n  André-Pascal Werthwein, can not be viewed by third parties.\n</p>\n<h5>Information, Blocking, Deletion and Correction</h5>\n<p>\n  Within applying, legal regulations, you — at any time — have the right on\n  Information about your stored/collected personal data, free of charge:\n</p>\n<ul class=\"list\">\n  <li>Origin</li>\n  <li>Receiver</li>\n  <li>Purpose of the Data Processing</li>\n</ul>\n<p>\n  Furthermore, you have the right of Correction, Blocking or Deletion of the\n  mentioned data. If there are questions on this matter, feel free to use the\n  contact options, to be found in&nbsp;<a\n    class=\"anchor-text\"\n    href=\"contact.html\"\n    target=\"_blank\"\n    rel=\"noopener nofollow noreferrer\"\n    >»Contact«&nbsp;</a\n  >or\n  <a\n    class=\"anchor-text\"\n    href=\"imprint.html\"\n    target=\"_blank\"\n    rel=\"noopener nofollow noreferrer\"\n    >»Imprint«</a\n  >.\n</p>\n<h5>Your Right to limit the Processing of personal Data</h5>\n<p>\n  You have the right to limit the processing of your stored/collected personal\n  data. In this matter you can use the contact options provided in&nbsp;<a\n    class=\"anchor-text\"\n    href=\"contact.html\"\n    target=\"_blank\"\n    rel=\"noopener nofollow noreferrer\"\n    >»Contact«&nbsp;</a\n  >or&nbsp;<a\n    class=\"anchor-text\"\n    href=\"imprint.html\"\n    target=\"_blank\"\n    rel=\"noopener nofollow noreferrer\"\n    >»Imprint«</a\n  >.\n</p>\n<p>\n  Your right for the »Limitation of Processing« is applicable in the following\n  cases:\n</p>\n<ul class=\"list\">\n  <li>\n    If you deny the correctness of the pesonal data stored/collected of you, you\n    have the right to limit the processing of your personal data, until the data\n    was checked or corrected completely.\n  </li>\n  <li>\n    If the collection of your personal data was unlawful, you can also limit the\n    processing of your personal data, instead of requesting the deletion.\n  </li>\n  <li>\n    If your stored/collected personal data is not needed by the service provider\n    anymore, you have — for the Assertion, Exercise oder Defense of legal claims\n    — the right to request the limitation of the processing of your data.\n  </li>\n  <li>\n    If you filed an objection in accordance with Art. 21 Para. 1 DSGVO, an\n    Assessment of interests is necessary. For the time of this Assessment you\n    have the right to limit the processing of your stored/collected personal\n    data.\n  </li>\n</ul>\n<p>\n  If you have limited the processing of your personal data, then this data is,\n  except for its storage, not to be processed anymore. The following exceptions\n  apply:\n</p>\n<ul class=\"list\">\n  <li>Your consent for the processing of your personal data</li>\n  <li>the Assertion, Exercise or Defense of legal claims</li>\n  <li>the protection of the rights of third, natural or legal persons</li>\n  <li>an important public interest of the European Union</li>\n  <li>\n    an important public interest of a Member State&nbsp;<span class=\"comment\"\n      >[of the European Union]</span\n    >\n  </li>\n</ul>\n<h4>III. The collection of Data on this Website</h4>\n<p>The collection of Data, Datatypes & Purposes</p>\n<h5>The Server-Log-Files</h5>\n<p>\n  The provider, who provides the Web Space for the Hosting of this Website,\n  automatically saves so-called Server-Log-Files, which are automatically\n  transmitted by your Internet Brower.\n</p>\n<ul class=\"list\">\n  <li><span class=\"comment\">[Anonymized]&nbsp;</span>IP-Address</li>\n  <li>\n    <abbr\n      title=\"The Time of the moment on which you enter this Website. The Time of the server request.\"\n      >Timestamp&nbsp;</abbr\n    ><dfn class=\"comment\"\n      >[= The Time of the moment on which you enter this Website. The Time of\n      the server request.]</dfn\n    >\n  </li>\n  <li>\n    <abbr title=\"clicked Links of Contents\">Request Line&nbsp;</abbr\n    ><dfn class=\"comment\">[= clicked Links of Contents]</dfn>\n  </li>\n  <li>\n    <abbr\n      title=\"Storage of Error in the display of the Website, e.g.: Error 404 Pages\"\n      >Status Code&nbsp;</abbr\n    ><dfn class=\"comment\"\n      >[= Storage of Error in the display of the Website, e.g.: Error 404\n      Pages]</dfn\n    >\n  </li>\n  <li>\n    <abbr title=\"Size of the Data, which is loaded when the Website is loaded.\"\n      >Size of the Response Bodies&nbsp;</abbr\n    ><dfn class=\"comment\"\n      >[= Size of the Data, which is loaded when the Website is loaded.]</dfn\n    >\n  </li>\n  <li>\n    <abbr\n      title=\"The address of the Website from which you navigated to this Website.\"\n      >Referrer URL&nbsp;</abbr\n    ><dfn class=\"comment\"\n      >[= The address of the Website from which you navigated to this\n      Website.]</dfn\n    >\n  </li>\n  <li>Hostname of the accessing Computer</li>\n  <li>\n    <abbr\n      title=\"Type of Internet Browser, Version of Internet Browser, Operating System\"\n      >User Agent&nbsp;</abbr\n    ><dfn class=\"comment\"\n      >[= Type of Internet Browser, Version of Internet Browser, Operating\n      System]</dfn\n    >\n  </li>\n  <li class=\"comment\">[Remote User – outdated Technology]</li>\n</ul>\n<p>This collected is not merged with data from other sources.</p>\n<p>\n  The data is collected in accordance with Art. 6 Para. 1 lit. f DSGVO. The\n  service provider&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >– André-Pascal Werthwein — has a legitimate interest in the technical\n  flawless display and optimization of the operated Website. To ensure this,\n  Server-Log-Files must be collected.\n</p>\n<h5>The Contact Form</h5>\n<p>\n  If you use the contact form provided on this Website, the data of the\n  request&nbsp;<span class=\"comment\"\n    >[including your Contact Information]&nbsp;</span\n  >is stored for the processing of your request, as well as for possible\n  follow-up questions. This data is not passed on, without your consent.\n</p>\n<p>\n  The processing of the data you provided in the contact form is only done on\n  the basis of your consent.&nbsp;<sup>[Art. 6 Para. 1 lit. a DSGVO]&nbsp;</sup\n  >You can — at any time — revoke that consent. For this revocation an informal\n  notification is sufficient.&nbsp;<span class=\"comment\"\n    >[The contact options can be found in\n    <a\n      class=\"anchor-text\"\n      href=\"contact.html\"\n      target=\"_blank\"\n      rel=\"noopener nofollow noreferrer\"\n      >»Contact«&nbsp;</a\n    >or&nbsp;<a\n      class=\"anchor-text\"\n      href=\"imprint.html\"\n      target=\"_blank\"\n      rel=\"noopener nofollow noreferrer\"\n      >»Imprint«</a\n    >.]&nbsp;</span\n  >The legitimacy of the processing of data, before the moment of revocation,\n  remains unaffected by the revocation.\n</p>\n<p>\n  The data that was transmitted by you using the contact form is stored by the\n  service provider&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >– André-Pascal Werthwein. This data is stored until\n</p>\n<ul class=\"list\">\n  <li>you request the Deletion of your stored/collected personal data.</li>\n  <li>\n    you revoke your consent for the storage of your stored/collected personal\n    data.\n  </li>\n  <li>\n    the purpose of the storage of your stored/collected personal is\n    inapplicable.&nbsp;<span class=\"comment\"\n      >[e.g.: completely answered/processed request]</span\n    >\n  </li>\n</ul>\n<p>\n  Mandatory legal regulations, such as retention periods, remain unaffected.\n</p>\n<h5>Requests via E-Mail, Telephone or Fax</h5>\n<p>\n  If you submit a request via E-Mail, Telephone or Fax, the request as well as\n  the personal data &nbsp;<span class=\"comment\">[e.g.: Name]&nbsp;</span\n  >contained are stored for the purpose of processing your request. This data is\n  not passed on, without your consent.\n</p>\n<p>\n  The processing of this data is therefore based on Art. 6 Para. 1 lit. b DSGVO,\n  if\n</p>\n<ul class=\"list\">\n  <li>the request is connected to the fulfillment of a contract.</li>\n  <li>\n    the processing of the data is necessary for the execution of pre-contractual\n    measures.\n  </li>\n</ul>\n<p>\n  Otherwise, the processing of data is basis on your consent&nbsp;<sup\n    >[Art. 6 Abs. 1 lit. a DSGVO]&nbsp;</sup\n  >and/or on the legitimate interests of the service provider&nbsp;<span\n    class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >– André-Pascal Werthwein —&nbsp;<sup>[Art. 6 Abs. 1 lit. f DSGVO]</sup>,\n  since the service provider&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >– André-Pascal Werthwein — has the legitimate interest to process the\n  requestsd directed at him.\n</p>\n<p>\n  The data that was transmitted by you using the contact form is stored by the\n  service provider&nbsp;<span class=\"comment\"\n    >[Owner of this Website]&nbsp;</span\n  >– André-Pascal Werthwein. This data is stored until\n</p>\n<ul class=\"list\">\n  <li>you request the Deletion of your stored/collected personal data.</li>\n  <li>\n    you revoke your consent for the storage of your stored/collected personal\n    data.\n  </li>\n  <li>\n    the purpose of the storage of your stored/collected personal is\n    inapplicable.&nbsp;<span class=\"comment\"\n      >[e.g.: completely answered/processed request]</span\n    >\n  </li>\n</ul>\n<p>\n  Mandatory legal regulations, such as retention periods, remain unaffected.\n</p>\n<h4>IV. Plugins and Tools</h4>\n<p>Plugins, Tools, Web Fonts, Icon Fonts</p>\n<h5>Google Fonts and Google Material Icons</h5>\n<p>\n  This Website uses for the uniform&nbsp;<span class=\"comment\"\n    >[user-independent]&nbsp;</span\n  >display of Typefaces and Icons so-called Web Fonts or Icon Fonts. This\n  Website therefore uses the following Web Font provided by Google:\n</p>\n<ul class=\"list\">\n  <li>Roboto&nbsp;<span class=\"comment\">[Light, 300]</span></li>\n  <li>Roboto&nbsp;<span class=\"comment\">[Bold, 700]</span></li>\n  <li>Noto Sans JP&nbsp;<span class=\"comment\">[Light, 300]</span></li>\n  <li>Noto Sans JP&nbsp;<span class=\"comment\">[Bold, 700]</span></li>\n  <li>Google Material Icons&nbsp;<span class=\"comment\">[Icon Font]</span></li>\n</ul>\n<p>\n  <span class=\"highlighting\"\n    >These typefaces are provided locally — on the Server of this Website.</span\n  >&nbsp;A connection to the servers of Google does not take place.\n</p>\n"
        },
        {
            "name": "VocabularyCard",
            "id": "component-VocabularyCard-ba1a941df1821d7baf8e906b8735e6461e4e82df892275000669b4a72e39faeafa943efd58e9c411d264d7a4fb3625f5006cfa36ed5111257d7ab9b3905b1d41",
            "file": "src/app/vocabulary/vocabulary-card/vocabulary-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vocabulary-card",
            "styleUrls": [
                "./vocabulary-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vocabulary-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "iVocabularyCard",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "vocabularyCardFlipped",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onShowAnswer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { iVocabularyCard } from './vocabulary-card.model';\n\n@Component({\n  selector: 'vocabulary-card',\n  templateUrl: './vocabulary-card.component.html',\n  styleUrls: ['./vocabulary-card.component.scss']\n})\n\nexport class VocabularyCard implements OnInit {\n  @Input() data: iVocabularyCard;\n\n  // local variables\n  vocabularyCardFlipped: boolean = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // if (this.data) this.checkVocabularyCardData();\n  }\n\n  onShowAnswer(): void {\n    this.vocabularyCardFlipped = !this.vocabularyCardFlipped;\n  } // shows answer by flipping the vocabulary-card\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    display: block;\r\n    width: 300px;\r\n    height: 300px;\r\n    perspective: 1000px;\r\n\r\n    & > div {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: all 0.3s ease-in-out;\r\n        transform-style: preserve-3d;\r\n\r\n        .vocabulary-card__flip--front,\r\n        .vocabulary-card__flip--back {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n            -webkit-backface-visibility: hidden;\r\n            backface-visibility: hidden;\r\n            background-color: white;\r\n        }\r\n\r\n        .vocabulary-card__flip--back {\r\n            transform: rotateY(180deg);\r\n        }\r\n    }\r\n\r\n    .vocabulary-card__state--flipped {\r\n        transform: rotateY(180deg);\r\n    }\r\n}",
                    "styleUrl": "./vocabulary-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"vocabulary-card\" [class.vocabulary-card__state--flipped]=\"vocabularyCardFlipped\">\n    <!-- ?? front -->\n    <section class=\"vocabulary-card__flip--front\">\n        <p>{{ data.translation }}</p>\n        <button (click)=\"onShowAnswer()\"><p><span class=\"material-icons\">360</span> Show answer</p></button>\n    </section>\n    \n    <!-- ?? back -->\n    <section class=\"vocabulary-card__flip--back\">\n        <!-- ?? kanji are first, kana second -->\n        <kanji-with-hiragana *ngIf=\"data.japanese.isComposite && data.japanese.kanjiIsFirst && data.japanese.kanji\" [data]=\"{kanji: data.japanese.kanji, hiragana: data.pronunciation.hiraganaOnly, pronunciation: data.pronunciation.latin}\"></kanji-with-hiragana>\n        <p *ngIf=\"data.japanese.isComposite && data.japanese.kanjiIsFirst && data.japanese.kana\">{{ data.japanese.kana }}</p>\n        \n        <!-- ?? kana are first, kanji second -->\n        <p *ngIf=\"data.japanese.isComposite && !data.japanese.kanjiIsFirst && data.japanese.kana\">{{ data.japanese.kana }}</p>\n        <kanji-with-hiragana *ngIf=\"data.japanese.isComposite && !data.japanese.kanjiIsFirst && data.japanese.kanji\" [data]=\"{kanji: data.japanese.kanji, hiragana: data.pronunciation.hiraganaOnly, pronunciation: data.pronunciation.latin}\"></kanji-with-hiragana>\n    \n        <!-- ?? only kana are used-->\n        <p *ngIf=\"!data.japanese.isComposite && data.japanese.kana\">{{ data.japanese.kana }}</p>\n    \n        <!-- ?? pronunciation -->\n        <section>\n            <p class=\"japanese\">{{ data.pronunciation.hiraganaOnly }}</p>\n            <p>{{ data.pronunciation.latin }}</p>\n        </section>\n\n        <button (click)=\"onShowAnswer()\"><p><span class=\"material-icons\">360</span> Show answer</p></button>\n    </section>\n</div>"
        },
        {
            "name": "VocabularyCardStack",
            "id": "component-VocabularyCardStack-be14367c2971424689c9321aea51a9dbe3f0a3ca563ec3b3e41a488032a21e392eae3a6f87fb5f9161e1427344c4d32cfbc5bbe9382c580c0d8918b6c90dd4e6",
            "file": "src/app/vocabulary/vocabulary-card-stack/vocabulary-card-stack.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vocabulary-card-stack",
            "styleUrls": [
                "./vocabulary-card-stack.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vocabulary-card-stack.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "vocabulary",
                    "defaultValue": "VOCABULARY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iVocabularyCard>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n// interfaces\nimport { iVocabularyCard } from '../vocabulary-card/vocabulary-card.model';\n\n// data\nimport { VOCABULARY } from 'src/app/data/data_vocabulary';\n\n@Component({\n  selector: 'vocabulary-card-stack',\n  templateUrl: './vocabulary-card-stack.component.html',\n  styleUrls: ['./vocabulary-card-stack.component.scss'],\n})\nexport class VocabularyCardStack {\n  vocabulary: Array<iVocabularyCard> = VOCABULARY;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./vocabulary-card-stack.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<vocabulary-card\n  *ngFor=\"let word of vocabulary\"\n  [data]=\"word\"\n></vocabulary-card>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-1884e7652691c3ead2796cca726c2b41d6f3dcd68969ea4e3807d44a791e4e7abc760b3478a51cbb0d58275f3a839b67092abd7a24fc90c71d48525da35db7b7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n\n// routing\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule, Routes } from '@angular/router';\n\n// writing\nimport { Kana } from './writing/kana/kana.component';\nimport { CompositeKanaCard } from './writing/composite-kana-card/composite-kana-card.component';\nimport { OverviewHiragana } from './writing/overview-hiragana/overview-hiragana.component';\nimport { OverviewKatakana } from './writing/overview-katakana/overview-katakana.component';\n\n// vocabulary\nimport { VocabularyCard } from './vocabulary/vocabulary-card/vocabulary-card.component';\nimport { VocabularyCardStack } from './vocabulary/vocabulary-card-stack/vocabulary-card-stack.component';\n\n// adjectives\nimport { FormsOfAdjectivesCard } from './adjectives/forms-of-adjectives-card/forms-of-adjectives-card.component';\nimport { FormsOfAdjectivesCardStack } from './adjectives/forms-of-adjectives-card-stack/forms-of-adjectives-card-stack.component';\n\n// learner-feedback\nimport { LearnerToolbar } from './learner-feedback/learner-toolbar/learner-toolbar.component';\n\n// dictionary\nimport { DictionaryTable } from './dictionary/dictionary-table/dictionary-table.component';\n\n// shared components\nimport { KanjiWithHiragana } from './shared-components/kanji-with-hiragana/kanji-with-hiragana.component';\nimport { KanaDropdown } from './shared-components/kana-dropdown/kana-dropdown.component';\n\n// legal notices\nimport { Imprint } from './legal-notices/imprint/imprint.component';\nimport { Contact } from './legal-notices/contact/contact.component';\nimport { PrivacyPolicy } from './legal-notices/privacy-policy/privacy-policy.component';\nimport { LegalNoticesFooterComponent } from './legal-notices/legal-notices-footer/legal-notices-footer.component';\nimport { Home } from './home/home.component';\nimport { DerivativeKanaCard } from './writing/derivative-kana-card/derivative-kana-card.component';\nimport { CompositeKanaWithDerivativeCard } from './writing/composite-kana-with-derivative-card/composite-kana-with-derivative-card.component';\n\nconst ROUTES: Routes = [\n  {\n    path: 'home',\n    component: Home,\n    title: 'Home',\n  },\n  {\n    path: 'vocabulary',\n    component: VocabularyCardStack,\n    title: 'Vocabulary',\n  },\n  // {\n  //   path: 'writing',\n  // },\n  {\n    path: 'writing/overview-hiragana',\n    component: OverviewHiragana,\n    title: 'Overview: Hiragana',\n  },\n  {\n    path: 'writing/overview-katakana',\n    component: OverviewKatakana,\n    title: 'Overview: Katakana',\n  },\n  // {\n  //   path: 'adjectives',\n  // },\n  {\n    path: 'adjectives/forms-of-adjectives',\n    component: FormsOfAdjectivesCardStack,\n    title: 'Forms of Adjectives',\n  },\n  {\n    path: 'legal-notices/imprint',\n    component: Imprint,\n    title: 'Imprint',\n  },\n  {\n    path: 'legal-notices/contact',\n    component: Contact,\n    title: 'Contact',\n  },\n  {\n    path: 'legal-notices/privacy-policy',\n    component: PrivacyPolicy,\n    title: 'Privacy Policy',\n  },\n  {\n    // ?? default, if url does not math defined routing\n    path: '**',\n    redirectTo: 'home',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // writing\n    Kana,\n    CompositeKanaCard,\n    OverviewHiragana,\n    OverviewKatakana,\n    // vocabulary\n    VocabularyCard,\n    VocabularyCardStack,\n    // learner-feedback\n    LearnerToolbar,\n    DictionaryTable,\n    KanjiWithHiragana,\n    FormsOfAdjectivesCard,\n    FormsOfAdjectivesCardStack,\n    Imprint,\n    Contact,\n    PrivacyPolicy,\n    LegalNoticesFooterComponent,\n    Home,\n    KanaDropdown,\n    DerivativeKanaCard,\n    CompositeKanaWithDerivativeCard,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(ROUTES, {\n      scrollPositionRestoration: 'top',\n      useHash: true,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CompositeKanaCard"
                        },
                        {
                            "name": "CompositeKanaWithDerivativeCard"
                        },
                        {
                            "name": "Contact"
                        },
                        {
                            "name": "DerivativeKanaCard"
                        },
                        {
                            "name": "DictionaryTable"
                        },
                        {
                            "name": "FormsOfAdjectivesCard"
                        },
                        {
                            "name": "FormsOfAdjectivesCardStack"
                        },
                        {
                            "name": "Home"
                        },
                        {
                            "name": "Imprint"
                        },
                        {
                            "name": "Kana"
                        },
                        {
                            "name": "KanaDropdown"
                        },
                        {
                            "name": "KanjiWithHiragana"
                        },
                        {
                            "name": "LearnerToolbar"
                        },
                        {
                            "name": "LegalNoticesFooterComponent"
                        },
                        {
                            "name": "OverviewHiragana"
                        },
                        {
                            "name": "OverviewKatakana"
                        },
                        {
                            "name": "PrivacyPolicy"
                        },
                        {
                            "name": "VocabularyCard"
                        },
                        {
                            "name": "VocabularyCardStack"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "COMPOSITE_HIRAGANA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_compositeHiragana.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iCompositeKanaCardCard>",
                "defaultValue": "[\r\n  {\r\n    isHiragana: true, // todo: refactoring of data-model to set 'isHiragana' only once\r\n    rowOfKana: hiraganaK,\r\n    solution: {\r\n      kana: 'キャ',\r\n      pronunciation: 'kya',\r\n    },\r\n  },\r\n]"
            },
            {
                "name": "COMPOSITE_HIRAGANA_WITH_DERIVATIVE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_compositeHirganaWithDerivative.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iCompositeKanaWithDerivativeCard>",
                "defaultValue": "[\r\n    {\r\n      isHiragana: true, // todo: refactoring of data-model to set 'isHiragana' only once\r\n      rowOfKana: hiraganaK,\r\n      solution: {\r\n        kana: 'ギャ',\r\n        pronunciation: 'gya',\r\n      },\r\n    },\r\n  ]"
            },
            {
                "name": "COMPOSITE_KATAKANA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_compositeKatakana.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iCompositeKanaCardCard>",
                "defaultValue": "[\r\n  {\r\n    isHiragana: false, // todo: refactoring of data-model to set 'isHiragana' only once\r\n    rowOfKana: katakanaK,\r\n    solution: {\r\n      kana: 'キャ',\r\n      pronunciation: 'kya',\r\n    },\r\n  },\r\n]"
            },
            {
                "name": "COMPOSITE_KATAKANA_WITH_DERIVATIVE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_compositeKatakanaWithDerivative.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iCompositeKanaWithDerivativeCard>",
                "defaultValue": "[\r\n    {\r\n      isHiragana: false, // todo: refactoring of data-model to set 'isHiragana' only once\r\n      rowOfKana: katakanaK,\r\n      solution: {\r\n        kana: 'ギャ',\r\n        pronunciation: 'gya',\r\n      },\r\n    },\r\n  ]"
            },
            {
                "name": "DERIVATIVE_HIRAGANA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_derivativeHiragana.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iDerivativeKanaCard>",
                "defaultValue": "[\r\n  {\r\n    rowOfKana: hiraganaK,\r\n    solution: {\r\n      kana: 'ぎ',\r\n      pronunciation: 'gi',\r\n    },\r\n  },\r\n]"
            },
            {
                "name": "DERIVATIVE_KATAKANA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_derivativeKatakana.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iDerivativeKanaCard>",
                "defaultValue": "[\r\n  {\r\n    rowOfKana: katakanaK,\r\n    solution: {\r\n      kana: 'ギ',\r\n      pronunciation: 'gi',\r\n    },\r\n  },\r\n]"
            },
            {
                "name": "HIRAGANA_K",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_hiraganaSyllables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "[\r\n  {\r\n    kana: 'か',\r\n    pronunciation: 'ka',\r\n  },\r\n  {\r\n    kana: 'き',\r\n    pronunciation: 'ki',\r\n  },\r\n  {\r\n    kana: 'く',\r\n    pronunciation: 'ku',\r\n  },\r\n  {\r\n    kana: 'け',\r\n    pronunciation: 'ke',\r\n  },\r\n  {\r\n    kana: 'こ',\r\n    pronunciation: 'ko',\r\n  },\r\n]"
            },
            {
                "name": "HIRAGANA_VOWELS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_hiraganaSyllables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "[\r\n  {\r\n    kana: 'あ',\r\n    pronunciation: 'a',\r\n  },\r\n  {\r\n    kana: 'い',\r\n    pronunciation: 'i',\r\n  },\r\n  {\r\n    kana: 'う',\r\n    pronunciation: 'u',\r\n  },\r\n  {\r\n    kana: 'え',\r\n    pronunciation: 'e',\r\n  },\r\n  {\r\n    kana: 'お',\r\n    pronunciation: 'o',\r\n  },\r\n]"
            },
            {
                "name": "HIRAGANA_Y",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_hiraganaSyllables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "[\r\n  {\r\n    kana: 'や',\r\n    pronunciation: 'ya',\r\n  },\r\n  {\r\n    kana: 'ゆ',\r\n    pronunciation: 'yu',\r\n  },\r\n  {\r\n    kana: 'よ',\r\n    pronunciation: 'yo',\r\n  },\r\n]"
            },
            {
                "name": "hiraganaK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_compositeHiragana.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "HIRAGANA_K"
            },
            {
                "name": "hiraganaK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_derivativeHiragana.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "HIRAGANA_K"
            },
            {
                "name": "hiraganaK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_compositeHirganaWithDerivative.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "HIRAGANA_K"
            },
            {
                "name": "I_ADJECTIVES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_formsOfAdjectives.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iFormsOfAdjectivesCard>",
                "defaultValue": "[]"
            },
            {
                "name": "KANA_DAKUTEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_kanaDakuten.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "[\r\n  {\r\n    kana: '゛',\r\n    pronunciation: 'ten-ten',\r\n  },\r\n  {\r\n    kana: '゜',\r\n    pronunciation: 'ten-ten',\r\n  },\r\n]"
            },
            {
                "name": "KATAKANA_K",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_katakanaSyllables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "[\r\n  {\r\n    kana: 'カ',\r\n    pronunciation: 'ka',\r\n  },\r\n  {\r\n    kana: 'キ',\r\n    pronunciation: 'ki',\r\n  },\r\n  {\r\n    kana: 'ク',\r\n    pronunciation: 'ku',\r\n  },\r\n  {\r\n    kana: 'ケ',\r\n    pronunciation: 'ke',\r\n  },\r\n  {\r\n    kana: 'コ',\r\n    pronunciation: 'ko',\r\n  },\r\n]"
            },
            {
                "name": "KATAKANA_VOWELS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_katakanaSyllables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "[\r\n  {\r\n    kana: 'ア',\r\n    pronunciation: 'a',\r\n  },\r\n  {\r\n    kana: 'イ',\r\n    pronunciation: 'i',\r\n  },\r\n  {\r\n    kana: 'ウ',\r\n    pronunciation: 'u',\r\n  },\r\n  {\r\n    kana: 'エ',\r\n    pronunciation: 'e',\r\n  },\r\n  {\r\n    kana: 'オ',\r\n    pronunciation: 'o',\r\n  },\r\n]"
            },
            {
                "name": "KATAKANA_Y",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_katakanaSyllables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "[\r\n  {\r\n    kana: 'ヤ',\r\n    pronunciation: 'ya',\r\n  },\r\n  {\r\n    kana: 'ユ',\r\n    pronunciation: 'yu',\r\n  },\r\n  {\r\n    kana: 'ヨ',\r\n    pronunciation: 'yo',\r\n  },\r\n]"
            },
            {
                "name": "katakanaK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_compositeKatakana.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "KATAKANA_K"
            },
            {
                "name": "katakanaK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_derivativeKatakana.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "KATAKANA_K"
            },
            {
                "name": "katakanaK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_compositeKatakanaWithDerivative.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iKana>",
                "defaultValue": "KATAKANA_K"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NA_ADJECTIVES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_formsOfAdjectives.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iFormsOfAdjectivesCard>",
                "defaultValue": "[\r\n    {\r\n        typeOfAdjective: 'な-Adjective',\r\n        adjective: {\r\n            kana: 'げんき（な)',\r\n            pronunciation: 'genki-na',\r\n            translation: 'being healthy'\r\n        },\r\n        negativePresent: {\r\n            kana: 'げんきじゃない',\r\n            pronunciation: 'ge-n-ki-ja-na-i',\r\n            translation: 'not being healthy'\r\n        },\r\n        positivePast: {\r\n            kana: 'げんきだった',\r\n            pronunciation: 'ge-n-ki-da-t-t-a',\r\n            translation: 'was healthy'\r\n          },\r\n          negativePast: {\r\n              kana: 'げんきじゃなかった',\r\n              pronunciation: 'ge-n-ki-ja-na-ka-t-t-a',\r\n            translation: 'was not healthy'\r\n        },\r\n    }\r\n]"
            },
            {
                "name": "NO_ADJECTIVES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_formsOfAdjectives.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iFormsOfAdjectivesCard>",
                "defaultValue": "[]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "VOCABULARY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/data_vocabulary.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<iVocabularyCard>",
                "defaultValue": "[\r\n    {\r\n        translation: 'Samurai',\r\n        japanese: {\r\n            isComposite: true,\r\n            kanjiIsFirst: true,\r\n            kanji: '侍',\r\n        },\r\n        pronunciation: {\r\n            latin: 'sa-mu-ra-i',\r\n            hiraganaOnly: 'さむらい'\r\n        }\r\n    },\r\n    {\r\n        translation: 'Straberry Cake',\r\n        japanese: {\r\n            kanjiIsFirst: false,\r\n            kana: 'ストロベリー ケーキ'\r\n        }, \r\n        pronunciation: {\r\n            latin: 'su-to-ro-be-ri-i ke-ki', \r\n            hiraganaOnly: ''\r\n        }\r\n    }\r\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/data/data_compositeHiragana.ts": [
                {
                    "name": "COMPOSITE_HIRAGANA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_compositeHiragana.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iCompositeKanaCardCard>",
                    "defaultValue": "[\r\n  {\r\n    isHiragana: true, // todo: refactoring of data-model to set 'isHiragana' only once\r\n    rowOfKana: hiraganaK,\r\n    solution: {\r\n      kana: 'キャ',\r\n      pronunciation: 'kya',\r\n    },\r\n  },\r\n]"
                },
                {
                    "name": "hiraganaK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_compositeHiragana.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "HIRAGANA_K"
                }
            ],
            "src/app/data/data_compositeHirganaWithDerivative.ts": [
                {
                    "name": "COMPOSITE_HIRAGANA_WITH_DERIVATIVE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_compositeHirganaWithDerivative.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iCompositeKanaWithDerivativeCard>",
                    "defaultValue": "[\r\n    {\r\n      isHiragana: true, // todo: refactoring of data-model to set 'isHiragana' only once\r\n      rowOfKana: hiraganaK,\r\n      solution: {\r\n        kana: 'ギャ',\r\n        pronunciation: 'gya',\r\n      },\r\n    },\r\n  ]"
                },
                {
                    "name": "hiraganaK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_compositeHirganaWithDerivative.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "HIRAGANA_K"
                }
            ],
            "src/app/data/data_compositeKatakana.ts": [
                {
                    "name": "COMPOSITE_KATAKANA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_compositeKatakana.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iCompositeKanaCardCard>",
                    "defaultValue": "[\r\n  {\r\n    isHiragana: false, // todo: refactoring of data-model to set 'isHiragana' only once\r\n    rowOfKana: katakanaK,\r\n    solution: {\r\n      kana: 'キャ',\r\n      pronunciation: 'kya',\r\n    },\r\n  },\r\n]"
                },
                {
                    "name": "katakanaK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_compositeKatakana.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "KATAKANA_K"
                }
            ],
            "src/app/data/data_compositeKatakanaWithDerivative.ts": [
                {
                    "name": "COMPOSITE_KATAKANA_WITH_DERIVATIVE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_compositeKatakanaWithDerivative.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iCompositeKanaWithDerivativeCard>",
                    "defaultValue": "[\r\n    {\r\n      isHiragana: false, // todo: refactoring of data-model to set 'isHiragana' only once\r\n      rowOfKana: katakanaK,\r\n      solution: {\r\n        kana: 'ギャ',\r\n        pronunciation: 'gya',\r\n      },\r\n    },\r\n  ]"
                },
                {
                    "name": "katakanaK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_compositeKatakanaWithDerivative.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "KATAKANA_K"
                }
            ],
            "src/app/data/data_derivativeHiragana.ts": [
                {
                    "name": "DERIVATIVE_HIRAGANA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_derivativeHiragana.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iDerivativeKanaCard>",
                    "defaultValue": "[\r\n  {\r\n    rowOfKana: hiraganaK,\r\n    solution: {\r\n      kana: 'ぎ',\r\n      pronunciation: 'gi',\r\n    },\r\n  },\r\n]"
                },
                {
                    "name": "hiraganaK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_derivativeHiragana.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "HIRAGANA_K"
                }
            ],
            "src/app/data/data_derivativeKatakana.ts": [
                {
                    "name": "DERIVATIVE_KATAKANA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_derivativeKatakana.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iDerivativeKanaCard>",
                    "defaultValue": "[\r\n  {\r\n    rowOfKana: katakanaK,\r\n    solution: {\r\n      kana: 'ギ',\r\n      pronunciation: 'gi',\r\n    },\r\n  },\r\n]"
                },
                {
                    "name": "katakanaK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_derivativeKatakana.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "KATAKANA_K"
                }
            ],
            "src/app/data/data_hiraganaSyllables.ts": [
                {
                    "name": "HIRAGANA_K",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_hiraganaSyllables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "[\r\n  {\r\n    kana: 'か',\r\n    pronunciation: 'ka',\r\n  },\r\n  {\r\n    kana: 'き',\r\n    pronunciation: 'ki',\r\n  },\r\n  {\r\n    kana: 'く',\r\n    pronunciation: 'ku',\r\n  },\r\n  {\r\n    kana: 'け',\r\n    pronunciation: 'ke',\r\n  },\r\n  {\r\n    kana: 'こ',\r\n    pronunciation: 'ko',\r\n  },\r\n]"
                },
                {
                    "name": "HIRAGANA_VOWELS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_hiraganaSyllables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "[\r\n  {\r\n    kana: 'あ',\r\n    pronunciation: 'a',\r\n  },\r\n  {\r\n    kana: 'い',\r\n    pronunciation: 'i',\r\n  },\r\n  {\r\n    kana: 'う',\r\n    pronunciation: 'u',\r\n  },\r\n  {\r\n    kana: 'え',\r\n    pronunciation: 'e',\r\n  },\r\n  {\r\n    kana: 'お',\r\n    pronunciation: 'o',\r\n  },\r\n]"
                },
                {
                    "name": "HIRAGANA_Y",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_hiraganaSyllables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "[\r\n  {\r\n    kana: 'や',\r\n    pronunciation: 'ya',\r\n  },\r\n  {\r\n    kana: 'ゆ',\r\n    pronunciation: 'yu',\r\n  },\r\n  {\r\n    kana: 'よ',\r\n    pronunciation: 'yo',\r\n  },\r\n]"
                }
            ],
            "src/app/data/data_formsOfAdjectives.ts": [
                {
                    "name": "I_ADJECTIVES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_formsOfAdjectives.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iFormsOfAdjectivesCard>",
                    "defaultValue": "[]"
                },
                {
                    "name": "NA_ADJECTIVES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_formsOfAdjectives.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iFormsOfAdjectivesCard>",
                    "defaultValue": "[\r\n    {\r\n        typeOfAdjective: 'な-Adjective',\r\n        adjective: {\r\n            kana: 'げんき（な)',\r\n            pronunciation: 'genki-na',\r\n            translation: 'being healthy'\r\n        },\r\n        negativePresent: {\r\n            kana: 'げんきじゃない',\r\n            pronunciation: 'ge-n-ki-ja-na-i',\r\n            translation: 'not being healthy'\r\n        },\r\n        positivePast: {\r\n            kana: 'げんきだった',\r\n            pronunciation: 'ge-n-ki-da-t-t-a',\r\n            translation: 'was healthy'\r\n          },\r\n          negativePast: {\r\n              kana: 'げんきじゃなかった',\r\n              pronunciation: 'ge-n-ki-ja-na-ka-t-t-a',\r\n            translation: 'was not healthy'\r\n        },\r\n    }\r\n]"
                },
                {
                    "name": "NO_ADJECTIVES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_formsOfAdjectives.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iFormsOfAdjectivesCard>",
                    "defaultValue": "[]"
                }
            ],
            "src/app/data/data_kanaDakuten.ts": [
                {
                    "name": "KANA_DAKUTEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_kanaDakuten.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "[\r\n  {\r\n    kana: '゛',\r\n    pronunciation: 'ten-ten',\r\n  },\r\n  {\r\n    kana: '゜',\r\n    pronunciation: 'ten-ten',\r\n  },\r\n]"
                }
            ],
            "src/app/data/data_katakanaSyllables.ts": [
                {
                    "name": "KATAKANA_K",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_katakanaSyllables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "[\r\n  {\r\n    kana: 'カ',\r\n    pronunciation: 'ka',\r\n  },\r\n  {\r\n    kana: 'キ',\r\n    pronunciation: 'ki',\r\n  },\r\n  {\r\n    kana: 'ク',\r\n    pronunciation: 'ku',\r\n  },\r\n  {\r\n    kana: 'ケ',\r\n    pronunciation: 'ke',\r\n  },\r\n  {\r\n    kana: 'コ',\r\n    pronunciation: 'ko',\r\n  },\r\n]"
                },
                {
                    "name": "KATAKANA_VOWELS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_katakanaSyllables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "[\r\n  {\r\n    kana: 'ア',\r\n    pronunciation: 'a',\r\n  },\r\n  {\r\n    kana: 'イ',\r\n    pronunciation: 'i',\r\n  },\r\n  {\r\n    kana: 'ウ',\r\n    pronunciation: 'u',\r\n  },\r\n  {\r\n    kana: 'エ',\r\n    pronunciation: 'e',\r\n  },\r\n  {\r\n    kana: 'オ',\r\n    pronunciation: 'o',\r\n  },\r\n]"
                },
                {
                    "name": "KATAKANA_Y",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_katakanaSyllables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iKana>",
                    "defaultValue": "[\r\n  {\r\n    kana: 'ヤ',\r\n    pronunciation: 'ya',\r\n  },\r\n  {\r\n    kana: 'ユ',\r\n    pronunciation: 'yu',\r\n  },\r\n  {\r\n    kana: 'ヨ',\r\n    pronunciation: 'yo',\r\n  },\r\n]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/data/data_vocabulary.ts": [
                {
                    "name": "VOCABULARY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/data_vocabulary.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<iVocabularyCard>",
                    "defaultValue": "[\r\n    {\r\n        translation: 'Samurai',\r\n        japanese: {\r\n            isComposite: true,\r\n            kanjiIsFirst: true,\r\n            kanji: '侍',\r\n        },\r\n        pronunciation: {\r\n            latin: 'sa-mu-ra-i',\r\n            hiraganaOnly: 'さむらい'\r\n        }\r\n    },\r\n    {\r\n        translation: 'Straberry Cake',\r\n        japanese: {\r\n            kanjiIsFirst: false,\r\n            kana: 'ストロベリー ケーキ'\r\n        }, \r\n        pronunciation: {\r\n            latin: 'su-to-ro-be-ri-i ke-ki', \r\n            hiraganaOnly: ''\r\n        }\r\n    }\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/adjectives/forms-of-adjectives-card-stack/forms-of-adjectives-card-stack.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormsOfAdjectivesCardStack",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/adjectives/forms-of-adjectives-card/forms-of-adjectives-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormsOfAdjectivesCard",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/adjectives/forms-of-adjectives-card/forms-of-adjectives-card.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iFormsOfAdjectivesCard",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_compositeHiragana.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPOSITE_HIRAGANA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_compositeHiragana.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hiraganaK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_compositeHirganaWithDerivative.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPOSITE_HIRAGANA_WITH_DERIVATIVE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_compositeHirganaWithDerivative.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hiraganaK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_compositeKatakana.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPOSITE_KATAKANA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_compositeKatakana.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "katakanaK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_compositeKatakanaWithDerivative.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPOSITE_KATAKANA_WITH_DERIVATIVE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_compositeKatakanaWithDerivative.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "katakanaK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_derivativeHiragana.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DERIVATIVE_HIRAGANA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_derivativeHiragana.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hiraganaK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_derivativeKatakana.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DERIVATIVE_KATAKANA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_derivativeKatakana.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "katakanaK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_formsOfAdjectives.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "I_ADJECTIVES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_formsOfAdjectives.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NA_ADJECTIVES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_formsOfAdjectives.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NO_ADJECTIVES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_hiraganaSyllables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HIRAGANA_K",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_hiraganaSyllables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HIRAGANA_VOWELS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_hiraganaSyllables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HIRAGANA_Y",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_kanaDakuten.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "KANA_DAKUTEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_katakanaSyllables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "KATAKANA_K",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_katakanaSyllables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "KATAKANA_VOWELS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_katakanaSyllables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "KATAKANA_Y",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/data_vocabulary.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VOCABULARY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dictionary/dictionary-table/dictionary-table-row.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iDictionaryTableRow",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dictionary/dictionary-table/dictionary-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DictionaryTable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Home",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/learner-feedback/learner-toolbar/learner-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LearnerToolbar",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/legal-notices/contact/contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Contact",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/legal-notices/imprint/imprint.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Imprint",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/legal-notices/legal-notices-footer/legal-notices-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LegalNoticesFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/legal-notices/privacy-policy/privacy-policy.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PrivacyPolicy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared-components/kana-dropdown/kana-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KanaDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared-components/kanji-with-hiragana/kanji-with-hiragana.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KanjiWithHiragana",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared-components/kanji-with-hiragana/kanji-with-hiragana.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iKanjiWithHiragana",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/vocabulary/vocabulary-card-stack/vocabulary-card-stack.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VocabularyCardStack",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/vocabulary/vocabulary-card/vocabulary-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VocabularyCard",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/vocabulary/vocabulary-card/vocabulary-card.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iVocabularyCard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/composite-kana-card/composite-kana-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompositeKanaCard",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/composite-kana-card/composite-kana-card.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iCompositeKanaCardCard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/composite-kana-with-derivative-card/composite-kana-with-derivative-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompositeKanaWithDerivativeCard",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/composite-kana-with-derivative-card/composite-kana-with-derivative-card.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iCompositeKanaWithDerivativeCard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/derivative-kana-card/derivative-kana-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DerivativeKanaCard",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/derivative-kana-card/derivative-kana-card.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iDerivativeKanaCard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/kana/kana.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Kana",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/kana/kana.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iKana",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/overview-hiragana/overview-hiragana.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverviewHiragana",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/writing/overview-katakana/overview-katakana.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverviewKatakana",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}